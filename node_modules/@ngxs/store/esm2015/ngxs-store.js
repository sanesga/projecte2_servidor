/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { NgxsModule, Action, Store, State, Select, SelectorOptions, Actions, getSelectorMetadata, getStoreMetadata, ensureStoreMetadata, ensureSelectorMetadata, ofAction, ofActionDispatched, ofActionSuccessful, ofActionCanceled, ofActionErrored, ofActionCompleted, NgxsSimpleChange, Selector, getActionTypeFromInstance, actionMatcher, createSelector, NoopNgxsExecutionStrategy, StateToken, NGXS_PLUGINS, StateStream, setValue, getValue, InitState, UpdateState } from './index';
export { InternalActions as ɵb, OrderedSubject as ɵa } from './src/actions-stream';
export { SelectFactory as ɵv } from './src/decorators/select/select-factory';
export { DispatchOutsideZoneNgxsExecutionStrategy as ɵy } from './src/execution/dispatch-outside-zone-ngxs-execution-strategy';
export { InternalNgxsExecutionStrategy as ɵs } from './src/execution/internal-ngxs-execution-strategy';
export { NGXS_EXECUTION_STRATEGY as ɵk } from './src/execution/symbols';
export { HostEnvironment as ɵu } from './src/host-environment/host-environment';
export { ConfigValidator as ɵt } from './src/internal/config-validator';
export { InternalDispatchedActionResults as ɵn, InternalDispatcher as ɵo } from './src/internal/dispatcher';
export { LifecycleStateManager as ɵw } from './src/internal/lifecycle-state-manager';
export { StateContextFactory as ɵp } from './src/internal/state-context-factory';
export { StateFactory as ɵm } from './src/internal/state-factory';
export { InternalStateOperations as ɵq } from './src/internal/state-operations';
export { NgxsFeatureModule as ɵx } from './src/modules/ngxs-feature.module';
export { NgxsRootModule as ɵl } from './src/modules/ngxs-root.module';
export { PluginManager as ɵr } from './src/plugin-manager';
export { FEATURE_STATE_TOKEN as ɵf, NG_DEV_MODE as ɵh, NG_TEST_MODE as ɵg, NgxsConfig as ɵj, ROOT_STATE_TOKEN as ɵe, SELECTOR_META_KEY as ɵi } from './src/symbols';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4cy1zdG9yZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3hzL3N0b3JlLyIsInNvdXJjZXMiOlsibmd4cy1zdG9yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUEsbWRBQWMsU0FBUyxDQUFDO0FBRXhCLE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLGNBQWMsSUFBSSxFQUFFLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUNoRixPQUFPLEVBQUMsYUFBYSxJQUFJLEVBQUUsRUFBQyxNQUFNLHdDQUF3QyxDQUFDO0FBQzNFLE9BQU8sRUFBQyx3Q0FBd0MsSUFBSSxFQUFFLEVBQUMsTUFBTSwrREFBK0QsQ0FBQztBQUM3SCxPQUFPLEVBQUMsNkJBQTZCLElBQUksRUFBRSxFQUFDLE1BQU0sa0RBQWtELENBQUM7QUFDckcsT0FBTyxFQUFDLHVCQUF1QixJQUFJLEVBQUUsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ3RFLE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLE1BQU0seUNBQXlDLENBQUM7QUFDOUUsT0FBTyxFQUFDLGVBQWUsSUFBSSxFQUFFLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQUN0RSxPQUFPLEVBQUMsK0JBQStCLElBQUksRUFBRSxFQUFDLGtCQUFrQixJQUFJLEVBQUUsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBRXpHLE9BQU8sRUFBQyxxQkFBcUIsSUFBSSxFQUFFLEVBQUMsTUFBTSx3Q0FBd0MsQ0FBQztBQUNuRixPQUFPLEVBQUMsbUJBQW1CLElBQUksRUFBRSxFQUFDLE1BQU0sc0NBQXNDLENBQUM7QUFDL0UsT0FBTyxFQUFDLFlBQVksSUFBSSxFQUFFLEVBQUMsTUFBTSw4QkFBOEIsQ0FBQztBQUNoRSxPQUFPLEVBQUMsdUJBQXVCLElBQUksRUFBRSxFQUFDLE1BQU0saUNBQWlDLENBQUM7QUFDOUUsT0FBTyxFQUFDLGlCQUFpQixJQUFJLEVBQUUsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBQzFFLE9BQU8sRUFBQyxjQUFjLElBQUksRUFBRSxFQUFDLE1BQU0sZ0NBQWdDLENBQUM7QUFDcEUsT0FBTyxFQUFDLGFBQWEsSUFBSSxFQUFFLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUV6RCxPQUFPLEVBQUMsbUJBQW1CLElBQUksRUFBRSxFQUFDLFdBQVcsSUFBSSxFQUFFLEVBQUMsWUFBWSxJQUFJLEVBQUUsRUFBQyxVQUFVLElBQUksRUFBRSxFQUFDLGdCQUFnQixJQUFJLEVBQUUsRUFBQyxpQkFBaUIsSUFBSSxFQUFFLEVBQUMsTUFBTSxlQUFlLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vaW5kZXgnO1xuXG5leHBvcnQge0ludGVybmFsQWN0aW9ucyBhcyDJtWIsT3JkZXJlZFN1YmplY3QgYXMgybVhfSBmcm9tICcuL3NyYy9hY3Rpb25zLXN0cmVhbSc7XG5leHBvcnQge1NlbGVjdEZhY3RvcnkgYXMgybV2fSBmcm9tICcuL3NyYy9kZWNvcmF0b3JzL3NlbGVjdC9zZWxlY3QtZmFjdG9yeSc7XG5leHBvcnQge0Rpc3BhdGNoT3V0c2lkZVpvbmVOZ3hzRXhlY3V0aW9uU3RyYXRlZ3kgYXMgybV5fSBmcm9tICcuL3NyYy9leGVjdXRpb24vZGlzcGF0Y2gtb3V0c2lkZS16b25lLW5neHMtZXhlY3V0aW9uLXN0cmF0ZWd5JztcbmV4cG9ydCB7SW50ZXJuYWxOZ3hzRXhlY3V0aW9uU3RyYXRlZ3kgYXMgybVzfSBmcm9tICcuL3NyYy9leGVjdXRpb24vaW50ZXJuYWwtbmd4cy1leGVjdXRpb24tc3RyYXRlZ3knO1xuZXhwb3J0IHtOR1hTX0VYRUNVVElPTl9TVFJBVEVHWSBhcyDJtWt9IGZyb20gJy4vc3JjL2V4ZWN1dGlvbi9zeW1ib2xzJztcbmV4cG9ydCB7SG9zdEVudmlyb25tZW50IGFzIMm1dX0gZnJvbSAnLi9zcmMvaG9zdC1lbnZpcm9ubWVudC9ob3N0LWVudmlyb25tZW50JztcbmV4cG9ydCB7Q29uZmlnVmFsaWRhdG9yIGFzIMm1dH0gZnJvbSAnLi9zcmMvaW50ZXJuYWwvY29uZmlnLXZhbGlkYXRvcic7XG5leHBvcnQge0ludGVybmFsRGlzcGF0Y2hlZEFjdGlvblJlc3VsdHMgYXMgybVuLEludGVybmFsRGlzcGF0Y2hlciBhcyDJtW99IGZyb20gJy4vc3JjL2ludGVybmFsL2Rpc3BhdGNoZXInO1xuZXhwb3J0IHtDYWxsYmFjayBhcyDJtWQsU3RhdGVDbGFzc0ludGVybmFsIGFzIMm1Y30gZnJvbSAnLi9zcmMvaW50ZXJuYWwvaW50ZXJuYWxzJztcbmV4cG9ydCB7TGlmZWN5Y2xlU3RhdGVNYW5hZ2VyIGFzIMm1d30gZnJvbSAnLi9zcmMvaW50ZXJuYWwvbGlmZWN5Y2xlLXN0YXRlLW1hbmFnZXInO1xuZXhwb3J0IHtTdGF0ZUNvbnRleHRGYWN0b3J5IGFzIMm1cH0gZnJvbSAnLi9zcmMvaW50ZXJuYWwvc3RhdGUtY29udGV4dC1mYWN0b3J5JztcbmV4cG9ydCB7U3RhdGVGYWN0b3J5IGFzIMm1bX0gZnJvbSAnLi9zcmMvaW50ZXJuYWwvc3RhdGUtZmFjdG9yeSc7XG5leHBvcnQge0ludGVybmFsU3RhdGVPcGVyYXRpb25zIGFzIMm1cX0gZnJvbSAnLi9zcmMvaW50ZXJuYWwvc3RhdGUtb3BlcmF0aW9ucyc7XG5leHBvcnQge05neHNGZWF0dXJlTW9kdWxlIGFzIMm1eH0gZnJvbSAnLi9zcmMvbW9kdWxlcy9uZ3hzLWZlYXR1cmUubW9kdWxlJztcbmV4cG9ydCB7Tmd4c1Jvb3RNb2R1bGUgYXMgybVsfSBmcm9tICcuL3NyYy9tb2R1bGVzL25neHMtcm9vdC5tb2R1bGUnO1xuZXhwb3J0IHtQbHVnaW5NYW5hZ2VyIGFzIMm1cn0gZnJvbSAnLi9zcmMvcGx1Z2luLW1hbmFnZXInO1xuZXhwb3J0IHtUb2tlbk5hbWUgYXMgybV6fSBmcm9tICcuL3NyYy9zdGF0ZS10b2tlbi9zeW1ib2xzJztcbmV4cG9ydCB7RkVBVFVSRV9TVEFURV9UT0tFTiBhcyDJtWYsTkdfREVWX01PREUgYXMgybVoLE5HX1RFU1RfTU9ERSBhcyDJtWcsTmd4c0NvbmZpZyBhcyDJtWosUk9PVF9TVEFURV9UT0tFTiBhcyDJtWUsU0VMRUNUT1JfTUVUQV9LRVkgYXMgybVpfSBmcm9tICcuL3NyYy9zeW1ib2xzJzsiXX0=