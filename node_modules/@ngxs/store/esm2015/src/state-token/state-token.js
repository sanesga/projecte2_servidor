/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ensureSelectorMetadata, propGetter } from '../internal/internals';
import { SelectFactory } from '../decorators/select/select-factory';
/**
 * @template T
 */
export class StateToken {
    /**
     * @param {?} name
     */
    constructor(name) {
        this.name = name;
        /** @type {?} */
        const selectorMetadata = ensureSelectorMetadata((/** @type {?} */ (this)));
        selectorMetadata.selectFromAppState = (/**
         * @param {?} state
         * @return {?}
         */
        (state) => {
            // This is lazy initialized with the select from app state function
            // so that it can get the config at the last responsible moment
            /** @type {?} */
            const getter = propGetter([this.name], (/** @type {?} */ (SelectFactory.config)));
            selectorMetadata.selectFromAppState = getter;
            return getter(state);
        });
    }
    /**
     * @return {?}
     */
    getName() {
        return this.name;
    }
    /**
     * @return {?}
     */
    toString() {
        return `StateToken[${this.name}]`;
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    StateToken.prototype.name;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGUtdG9rZW4uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4cy9zdG9yZS8iLCJzb3VyY2VzIjpbInNyYy9zdGF0ZS10b2tlbi9zdGF0ZS10b2tlbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsT0FBTyxFQUFFLHNCQUFzQixFQUFFLFVBQVUsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzNFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQzs7OztBQUVwRSxNQUFNLE9BQU8sVUFBVTs7OztJQUNyQixZQUE2QixJQUFrQjtRQUFsQixTQUFJLEdBQUosSUFBSSxDQUFjOztjQUN2QyxnQkFBZ0IsR0FBRyxzQkFBc0IsQ0FBQyxtQkFBSyxJQUFJLEVBQUEsQ0FBQztRQUMxRCxnQkFBZ0IsQ0FBQyxrQkFBa0I7Ozs7UUFBRyxDQUFDLEtBQVUsRUFBSyxFQUFFOzs7O2tCQUdoRCxNQUFNLEdBQUcsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLG1CQUFBLGFBQWEsQ0FBQyxNQUFNLEVBQUMsQ0FBQztZQUM3RCxnQkFBZ0IsQ0FBQyxrQkFBa0IsR0FBRyxNQUFNLENBQUM7WUFDN0MsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdkIsQ0FBQyxDQUFBLENBQUM7SUFDSixDQUFDOzs7O0lBRUQsT0FBTztRQUNMLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNuQixDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLE9BQU8sY0FBYyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUM7SUFDcEMsQ0FBQztDQUNGOzs7Ozs7SUFsQmEsMEJBQW1DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW5OYW1lIH0gZnJvbSAnLi9zeW1ib2xzJztcclxuaW1wb3J0IHsgZW5zdXJlU2VsZWN0b3JNZXRhZGF0YSwgcHJvcEdldHRlciB9IGZyb20gJy4uL2ludGVybmFsL2ludGVybmFscyc7XHJcbmltcG9ydCB7IFNlbGVjdEZhY3RvcnkgfSBmcm9tICcuLi9kZWNvcmF0b3JzL3NlbGVjdC9zZWxlY3QtZmFjdG9yeSc7XHJcblxyXG5leHBvcnQgY2xhc3MgU3RhdGVUb2tlbjxUID0gdm9pZD4ge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgbmFtZTogVG9rZW5OYW1lPFQ+KSB7XHJcbiAgICBjb25zdCBzZWxlY3Rvck1ldGFkYXRhID0gZW5zdXJlU2VsZWN0b3JNZXRhZGF0YSg8YW55PnRoaXMpO1xyXG4gICAgc2VsZWN0b3JNZXRhZGF0YS5zZWxlY3RGcm9tQXBwU3RhdGUgPSAoc3RhdGU6IGFueSk6IFQgPT4ge1xyXG4gICAgICAvLyBUaGlzIGlzIGxhenkgaW5pdGlhbGl6ZWQgd2l0aCB0aGUgc2VsZWN0IGZyb20gYXBwIHN0YXRlIGZ1bmN0aW9uXHJcbiAgICAgIC8vIHNvIHRoYXQgaXQgY2FuIGdldCB0aGUgY29uZmlnIGF0IHRoZSBsYXN0IHJlc3BvbnNpYmxlIG1vbWVudFxyXG4gICAgICBjb25zdCBnZXR0ZXIgPSBwcm9wR2V0dGVyKFt0aGlzLm5hbWVdLCBTZWxlY3RGYWN0b3J5LmNvbmZpZyEpO1xyXG4gICAgICBzZWxlY3Rvck1ldGFkYXRhLnNlbGVjdEZyb21BcHBTdGF0ZSA9IGdldHRlcjtcclxuICAgICAgcmV0dXJuIGdldHRlcihzdGF0ZSk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZ2V0TmFtZSgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMubmFtZTtcclxuICB9XHJcblxyXG4gIHRvU3RyaW5nKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gYFN0YXRlVG9rZW5bJHt0aGlzLm5hbWV9XWA7XHJcbiAgfVxyXG59XHJcbiJdfQ==