{"version":3,"file":"ngxs-store.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://@ngxs/store/src/configs/messages.config.ts","ng://@ngxs/store/src/execution/dispatch-outside-zone-ngxs-execution-strategy.ts","ng://@ngxs/store/src/symbols.ts","ng://@ngxs/store/src/execution/symbols.ts","ng://@ngxs/store/src/utils/utils.ts","ng://@ngxs/store/src/internal/internals.ts","ng://@ngxs/store/src/operators/of-action.ts","ng://@ngxs/store/src/operators/leave-ngxs.ts","ng://@ngxs/store/src/execution/internal-ngxs-execution-strategy.ts","ng://@ngxs/store/src/actions-stream.ts","ng://@ngxs/store/src/utils/compose.ts","ng://@ngxs/store/src/internal/state-stream.ts","ng://@ngxs/store/src/plugin-manager.ts","ng://@ngxs/store/src/internal/dispatcher.ts","ng://@ngxs/store/src/utils/freeze.ts","ng://@ngxs/store/src/host-environment/host-environment.ts","ng://@ngxs/store/src/internal/config-validator.ts","ng://@ngxs/store/src/internal/state-operations.ts","ng://@ngxs/store/src/internal/state-operators.ts","ng://@ngxs/store/src/internal/state-context-factory.ts","ng://@ngxs/store/src/utils/store-validators.ts","ng://@ngxs/store/src/internal/state-factory.ts","ng://@ngxs/store/src/internal/lifecycle-state-manager.ts","ng://@ngxs/store/src/utils/selector-utils.ts","ng://@ngxs/store/src/store.ts","ng://@ngxs/store/src/decorators/select/select-factory.ts","ng://@ngxs/store/src/actions/actions.ts","ng://@ngxs/store/src/ivy/ivy-enabled-in-dev-mode.ts","ng://@ngxs/store/src/modules/ngxs-root.module.ts","ng://@ngxs/store/src/modules/ngxs-feature.module.ts","ng://@ngxs/store/src/module.ts","ng://@ngxs/store/src/decorators/action.ts","ng://@ngxs/store/src/ivy/ensure-state-class-is-injectable.ts","ng://@ngxs/store/src/decorators/state.ts","ng://@ngxs/store/src/decorators/select/symbols.ts","ng://@ngxs/store/src/decorators/select/select.ts","ng://@ngxs/store/src/decorators/selector-options.ts","ng://@ngxs/store/src/decorators/selector/selector.ts","ng://@ngxs/store/src/execution/noop-ngxs-execution-strategy.ts","ng://@ngxs/store/src/state-token/state-token.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum VALIDATION_CODE {\r\n  STATE_NAME = 'STATE_NAME',\r\n  STATE_UNIQUE = 'STATE_UNIQUE',\r\n  STATE_NAME_PROPERTY = 'STATE_NAME_PROPERTY',\r\n  STATE_DECORATOR = 'STATE_DECORATOR',\r\n  INCORRECT_PRODUCTION = 'INCORRECT_PRODUCTION',\r\n  INCORRECT_DEVELOPMENT = 'INCORRECT_DEVELOPMENT',\r\n  SELECT_FACTORY_NOT_CONNECTED = 'SELECT_FACTORY_NOT_CONNECTED',\r\n  ACTION_DECORATOR = 'ACTION_DECORATOR',\r\n  SELECTOR_DECORATOR = 'SELECTOR_DECORATOR',\r\n  ZONE_WARNING = 'ZONE_WARNING',\r\n  PATCHING_ARRAY = 'PATCHING_ARRAY',\r\n  PATCHING_PRIMITIVE = 'PATCHING_PRIMITIVE',\r\n  UNDECORATED_STATE_IN_IVY = 'UNDECORATED_STATE_IN_IVY'\r\n}\r\n\r\nexport const CONFIG_MESSAGES = {\r\n  [VALIDATION_CODE.STATE_NAME]: (name: string) =>\r\n    `${name} is not a valid state name. It needs to be a valid object property name.`,\r\n  [VALIDATION_CODE.STATE_NAME_PROPERTY]: () => `States must register a 'name' property`,\r\n  [VALIDATION_CODE.STATE_UNIQUE]: (current: string, newName: string, oldName: string) =>\r\n    `State name '${current}' from ${newName} already exists in ${oldName}`,\r\n  [VALIDATION_CODE.STATE_DECORATOR]: () => 'States must be decorated with @State() decorator',\r\n  [VALIDATION_CODE.INCORRECT_PRODUCTION]: () =>\r\n    'Angular is running in production mode but NGXS is still running in the development mode!\\n' +\r\n    'Please set developmentMode to false on the NgxsModule options when in production mode.\\n' +\r\n    'NgxsModule.forRoot(states, { developmentMode: !environment.production })',\r\n  [VALIDATION_CODE.INCORRECT_DEVELOPMENT]: () =>\r\n    'RECOMMENDATION: Set developmentMode to true on the NgxsModule when Angular is running in development mode.\\n' +\r\n    'NgxsModule.forRoot(states, { developmentMode: !environment.production })',\r\n  [VALIDATION_CODE.SELECT_FACTORY_NOT_CONNECTED]: () =>\r\n    'You have forgotten to import the NGXS module!',\r\n  [VALIDATION_CODE.ACTION_DECORATOR]: () =>\r\n    '@Action() decorator cannot be used with static methods',\r\n  [VALIDATION_CODE.SELECTOR_DECORATOR]: () => 'Selectors only work on methods',\r\n  [VALIDATION_CODE.ZONE_WARNING]: () =>\r\n    'Your application was bootstrapped with nooped zone and your execution strategy requires an actual NgZone!\\n' +\r\n    'Please set the value of the executionStrategy property to NoopNgxsExecutionStrategy.\\n' +\r\n    'NgxsModule.forRoot(states, { executionStrategy: NoopNgxsExecutionStrategy })',\r\n  [VALIDATION_CODE.PATCHING_ARRAY]: () => 'Patching arrays is not supported.',\r\n  [VALIDATION_CODE.PATCHING_PRIMITIVE]: () => 'Patching primitives is not supported.',\r\n  [VALIDATION_CODE.UNDECORATED_STATE_IN_IVY]: (name: string) =>\r\n    `'${name}' class should be decorated with @Injectable() right after the @State() decorator`\r\n};\r\n","import { Inject, Injectable, NgZone, PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformServer } from '@angular/common';\r\n\r\nimport { NgxsExecutionStrategy } from './symbols';\r\nimport { CONFIG_MESSAGES, VALIDATION_CODE } from '../configs/messages.config';\r\n\r\n@Injectable()\r\nexport class DispatchOutsideZoneNgxsExecutionStrategy implements NgxsExecutionStrategy {\r\n  constructor(private _ngZone: NgZone, @Inject(PLATFORM_ID) private _platformId: string) {\r\n    this.verifyZoneIsNotNooped(this._ngZone);\r\n  }\r\n\r\n  enter<T>(func: () => T): T {\r\n    if (isPlatformServer(this._platformId)) {\r\n      return this.runInsideAngular(func);\r\n    }\r\n    return this.runOutsideAngular(func);\r\n  }\r\n\r\n  leave<T>(func: () => T): T {\r\n    return this.runInsideAngular(func);\r\n  }\r\n\r\n  private runInsideAngular<T>(func: () => T): T {\r\n    if (NgZone.isInAngularZone()) {\r\n      return func();\r\n    }\r\n    return this._ngZone.run(func);\r\n  }\r\n\r\n  private runOutsideAngular<T>(func: () => T): T {\r\n    if (NgZone.isInAngularZone()) {\r\n      return this._ngZone.runOutsideAngular(func);\r\n    }\r\n    return func();\r\n  }\r\n\r\n  private verifyZoneIsNotNooped(ngZone: NgZone): void {\r\n    // `NoopNgZone` is not exposed publicly as it doesn't expect\r\n    // to be used outside of the core Angular code, thus we just have\r\n    // to check if the zone doesn't extend or instanceof `NgZone`\r\n    if (ngZone instanceof NgZone) {\r\n      return;\r\n    }\r\n\r\n    console.warn(CONFIG_MESSAGES[VALIDATION_CODE.ZONE_WARNING]());\r\n  }\r\n}\r\n","import { Injectable, InjectionToken, Type } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PlainObject, StateClass } from '@ngxs/store/internals';\r\nimport { SharedSelectorOptions, Callback } from './internal/internals';\r\nimport { NgxsExecutionStrategy } from './execution/symbols';\r\nimport { DispatchOutsideZoneNgxsExecutionStrategy } from './execution/dispatch-outside-zone-ngxs-execution-strategy';\r\nimport { StateToken } from './state-token/state-token';\r\n\r\nexport const ROOT_STATE_TOKEN = new InjectionToken<any>('ROOT_STATE_TOKEN');\r\nexport const FEATURE_STATE_TOKEN = new InjectionToken<any>('FEATURE_STATE_TOKEN');\r\nexport const NGXS_PLUGINS = new InjectionToken('NGXS_PLUGINS');\r\nexport const NG_TEST_MODE = new InjectionToken<Callback<boolean>>('NG_TEST_MODE');\r\nexport const NG_DEV_MODE = new InjectionToken<Callback<boolean>>('NG_DEV_MODE');\r\n\r\nexport const META_KEY = 'NGXS_META';\r\nexport const META_OPTIONS_KEY = 'NGXS_OPTIONS_META';\r\nexport const SELECTOR_META_KEY = 'NGXS_SELECTOR_META';\r\n\r\nexport type NgxsLifeCycle = Partial<NgxsOnChanges> &\r\n  Partial<NgxsOnInit> &\r\n  Partial<NgxsAfterBootstrap>;\r\n\r\nexport type NgxsPluginFn = (state: any, mutation: any, next: NgxsNextPluginFn) => any;\r\n\r\n/**\r\n * The NGXS config settings.\r\n */\r\n@Injectable()\r\nexport class NgxsConfig {\r\n  /**\r\n   * Run in development mode. This will add additional debugging features:\r\n   * - Object.freeze on the state and actions to guarantee immutability\r\n   * (default: false)\r\n   */\r\n  developmentMode: boolean;\r\n  compatibility: {\r\n    /**\r\n     * Support a strict Content Security Policy.\r\n     * This will circumvent some optimisations that violate a strict CSP through the use of `new Function(...)`.\r\n     * (default: false)\r\n     */\r\n    strictContentSecurityPolicy: boolean;\r\n  };\r\n  /**\r\n   * Determines the execution context to perform async operations inside. An implementation can be\r\n   * provided to override the default behaviour where the async operations are run\r\n   * outside Angular's zone but all observable behaviours of NGXS are run back inside Angular's zone.\r\n   * These observable behaviours are from:\r\n   *   `@Select(...)`, `store.select(...)`, `actions.subscribe(...)` or `store.dispatch(...).subscribe(...)`\r\n   * Every `zone.run` causes Angular to run change detection on the whole tree (`app.tick()`) so of your\r\n   * application doesn't rely on zone.js running change detection then you can switch to the\r\n   * `NoopNgxsExecutionStrategy` that doesn't interact with zones.\r\n   * (default: null)\r\n   */\r\n  executionStrategy: Type<NgxsExecutionStrategy>;\r\n  /**\r\n   * Defining the default state before module initialization\r\n   * This is convenient if we need to create a define our own set of states.\r\n   * @deprecated will be removed after v4\r\n   * (default: {})\r\n   */\r\n  defaultsState: PlainObject = {};\r\n  /**\r\n   * Defining shared selector options\r\n   */\r\n  selectorOptions: SharedSelectorOptions = {\r\n    injectContainerState: true, // TODO: default is true in v3, will change in v4\r\n    suppressErrors: true // TODO: default is true in v3, will change in v4\r\n  };\r\n\r\n  constructor() {\r\n    this.compatibility = {\r\n      strictContentSecurityPolicy: false\r\n    };\r\n    this.executionStrategy = DispatchOutsideZoneNgxsExecutionStrategy;\r\n  }\r\n}\r\n\r\nexport type StateOperator<T> = (existing: Readonly<T>) => T;\r\n\r\n/**\r\n * State context provided to the actions in the state.\r\n */\r\nexport interface StateContext<T> {\r\n  /**\r\n   * Get the current state.\r\n   */\r\n  getState(): T;\r\n\r\n  /**\r\n   * Reset the state to a new value.\r\n   */\r\n  setState(val: T | StateOperator<T>): T;\r\n\r\n  /**\r\n   * Patch the existing state with the provided value.\r\n   */\r\n  patchState(val: Partial<T>): T;\r\n\r\n  /**\r\n   * Dispatch a new action and return the dispatched observable.\r\n   */\r\n  dispatch(actions: any | any[]): Observable<void>;\r\n}\r\n\r\nexport type NgxsNextPluginFn = (state: any, mutation: any) => any;\r\n\r\n/**\r\n * Plugin interface\r\n */\r\nexport interface NgxsPlugin {\r\n  /**\r\n   * Handle the state/action before its submitted to the state handlers.\r\n   */\r\n  handle(state: any, action: any, next: NgxsNextPluginFn): any;\r\n}\r\n\r\n/**\r\n * Options that can be provided to the store.\r\n */\r\nexport interface StoreOptions<T> {\r\n  /**\r\n   * Name of the state. Required.\r\n   */\r\n  name: string | StateToken<T>;\r\n\r\n  /**\r\n   * Default values for the state. If not provided, uses empty object.\r\n   */\r\n  defaults?: T;\r\n\r\n  /**\r\n   * Sub states for the given state.\r\n   */\r\n  children?: StateClass[];\r\n}\r\n\r\n/**\r\n * Represents a basic change from a previous to a new value for a single state instance.\r\n * Passed as a value in a NgxsSimpleChanges object to the ngxsOnChanges hook.\r\n */\r\nexport class NgxsSimpleChange<T = any> {\r\n  constructor(\r\n    public readonly previousValue: T,\r\n    public readonly currentValue: T,\r\n    public readonly firstChange: boolean\r\n  ) {}\r\n}\r\n\r\n/**\r\n * On init interface\r\n */\r\nexport interface NgxsOnInit {\r\n  ngxsOnInit(ctx?: StateContext<any>): void | any;\r\n}\r\n\r\n/**\r\n * On change interface\r\n */\r\nexport interface NgxsOnChanges {\r\n  ngxsOnChanges(change: NgxsSimpleChange): void;\r\n}\r\n\r\n/**\r\n * After bootstrap interface\r\n */\r\nexport interface NgxsAfterBootstrap {\r\n  ngxsAfterBootstrap(ctx?: StateContext<any>): void;\r\n}\r\n\r\nexport type NgxsModuleOptions = Partial<NgxsConfig>;\r\n","import { InjectionToken } from '@angular/core';\r\n\r\n/*\r\n * Internal execution strategy injection token\r\n */\r\nexport const NGXS_EXECUTION_STRATEGY = new InjectionToken<NgxsExecutionStrategy>(\r\n  'NGXS_EXECUTION_STRATEGY'\r\n);\r\n\r\n/*\r\n * Execution strategy interface\r\n */\r\nexport interface NgxsExecutionStrategy {\r\n  enter<T>(func: () => T): T;\r\n  leave<T>(func: () => T): T;\r\n}\r\n","/**\r\n * Returns the type from an action instance/class.\r\n * @ignore\r\n */\r\nexport function getActionTypeFromInstance(action: any): string | undefined {\r\n  if (action.constructor && action.constructor.type) {\r\n    return action.constructor.type;\r\n  }\r\n\r\n  return action.type;\r\n}\r\n\r\n/**\r\n * Matches a action\r\n * @ignore\r\n */\r\nexport function actionMatcher(action1: any) {\r\n  const type1 = getActionTypeFromInstance(action1);\r\n\r\n  return function(action2: any) {\r\n    return type1 === getActionTypeFromInstance(action2);\r\n  };\r\n}\r\n\r\n/**\r\n * Set a deeply nested value. Example:\r\n *\r\n *   setValue({ foo: { bar: { eat: false } } },\r\n *      'foo.bar.eat', true) //=> { foo: { bar: { eat: true } } }\r\n *\r\n * While it traverses it also creates new objects from top down.\r\n *\r\n * @ignore\r\n */\r\nexport const setValue = (obj: any, prop: string, val: any) => {\r\n  obj = { ...obj };\r\n\r\n  const split = prop.split('.');\r\n  const lastIndex = split.length - 1;\r\n\r\n  split.reduce((acc, part, index) => {\r\n    if (index === lastIndex) {\r\n      acc[part] = val;\r\n    } else {\r\n      acc[part] = Array.isArray(acc[part]) ? acc[part].slice() : { ...acc[part] };\r\n    }\r\n\r\n    return acc && acc[part];\r\n  }, obj);\r\n\r\n  return obj;\r\n};\r\n\r\n/**\r\n * Get a deeply nested value. Example:\r\n *\r\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\r\n *\r\n * @ignore\r\n */\r\nexport const getValue = (obj: any, prop: string): any =>\r\n  prop.split('.').reduce((acc: any, part: string) => acc && acc[part], obj);\r\n","import { PlainObjectOf, StateClass } from '@ngxs/store/internals';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport {\r\n  META_KEY,\r\n  META_OPTIONS_KEY,\r\n  NgxsConfig,\r\n  NgxsSimpleChange,\r\n  SELECTOR_META_KEY,\r\n  StoreOptions\r\n} from '../symbols';\r\nimport { ActionHandlerMetaData } from '../actions/symbols';\r\nimport { getValue } from '../utils/utils';\r\n\r\nfunction asReadonly<T>(value: T): Readonly<T> {\r\n  return value;\r\n}\r\n\r\n// inspired from https://stackoverflow.com/a/43674389\r\nexport interface StateClassInternal<T = any, U = any> extends StateClass<T> {\r\n  [META_KEY]?: MetaDataModel;\r\n  [META_OPTIONS_KEY]?: StoreOptions<U>;\r\n}\r\n\r\nexport type StateKeyGraph = PlainObjectOf<string[]>;\r\nexport type StatesByName = PlainObjectOf<StateClassInternal>;\r\n\r\nexport interface StateOperations<T> {\r\n  getState(): T;\r\n\r\n  setState(val: T): T;\r\n\r\n  dispatch(actions: any | any[]): Observable<void>;\r\n}\r\n\r\nexport interface MetaDataModel {\r\n  name: string | null;\r\n  actions: PlainObjectOf<ActionHandlerMetaData[]>;\r\n  defaults: any;\r\n  path: string | null;\r\n  selectFromAppState: SelectFromState | null;\r\n  children?: StateClassInternal[];\r\n}\r\n\r\nexport type SelectFromState = (state: any) => any;\r\n\r\nexport interface SharedSelectorOptions {\r\n  injectContainerState?: boolean;\r\n  suppressErrors?: boolean;\r\n}\r\n\r\nexport interface SelectorMetaDataModel {\r\n  selectFromAppState: SelectFromState | null;\r\n  originalFn: Function | null;\r\n  containerClass: any;\r\n  selectorName: string | null;\r\n  getSelectorOptions: () => SharedSelectorOptions;\r\n}\r\n\r\nexport interface MappedStore {\r\n  name: string;\r\n  isInitialised: boolean;\r\n  actions: PlainObjectOf<ActionHandlerMetaData[]>;\r\n  defaults: any;\r\n  instance: any;\r\n  depth: string;\r\n}\r\n\r\nexport interface StatesAndDefaults {\r\n  defaults: any;\r\n  states: MappedStore[];\r\n}\r\n\r\nexport type Callback<T = any, V = any> = (...args: V[]) => T;\r\n\r\nexport interface RootStateDiff<T> {\r\n  currentAppState: T;\r\n  newAppState: T;\r\n}\r\n\r\n/**\r\n * Ensures metadata is attached to the class and returns it.\r\n *\r\n * @ignore\r\n */\r\nexport function ensureStoreMetadata(target: StateClassInternal): MetaDataModel {\r\n  if (!target.hasOwnProperty(META_KEY)) {\r\n    const defaultMetadata: MetaDataModel = {\r\n      name: null,\r\n      actions: {},\r\n      defaults: {},\r\n      path: null,\r\n      selectFromAppState: null,\r\n      children: []\r\n    };\r\n\r\n    Object.defineProperty(target, META_KEY, { value: defaultMetadata });\r\n  }\r\n  return getStoreMetadata(target);\r\n}\r\n\r\n/**\r\n * Get the metadata attached to the state class if it exists.\r\n *\r\n * @ignore\r\n */\r\nexport function getStoreMetadata(target: StateClassInternal): MetaDataModel {\r\n  return target[META_KEY]!;\r\n}\r\n\r\n// closure variable used to store the global options\r\nlet _globalSelectorOptions: SharedSelectorOptions = {};\r\n\r\nexport const globalSelectorOptions = asReadonly({\r\n  get(): Readonly<SharedSelectorOptions> {\r\n    return _globalSelectorOptions;\r\n  },\r\n  set(value: Readonly<SharedSelectorOptions>) {\r\n    _globalSelectorOptions = { ...value };\r\n  }\r\n});\r\n\r\n/**\r\n * Ensures metadata is attached to the selector and returns it.\r\n *\r\n * @ignore\r\n */\r\nexport function ensureSelectorMetadata(target: Function): SelectorMetaDataModel {\r\n  if (!target.hasOwnProperty(SELECTOR_META_KEY)) {\r\n    const defaultMetadata: SelectorMetaDataModel = {\r\n      selectFromAppState: null,\r\n      originalFn: null,\r\n      containerClass: null,\r\n      selectorName: null,\r\n      getSelectorOptions: () => ({})\r\n    };\r\n\r\n    Object.defineProperty(target, SELECTOR_META_KEY, { value: defaultMetadata });\r\n  }\r\n\r\n  return getSelectorMetadata(target);\r\n}\r\n\r\n/**\r\n * Get the metadata attached to the selector if it exists.\r\n *\r\n * @ignore\r\n */\r\nexport function getSelectorMetadata(target: any): SelectorMetaDataModel {\r\n  return target[SELECTOR_META_KEY];\r\n}\r\n\r\n/**\r\n * Get a deeply nested value. Example:\r\n *\r\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\r\n *\r\n * Note: This is not as fast as the `fastPropGetter` but is strict Content Security Policy compliant.\r\n * See perf hit: https://jsperf.com/fast-value-getter-given-path/1\r\n *\r\n * @ignore\r\n */\r\nfunction compliantPropGetter(paths: string[]): (x: any) => any {\r\n  const copyOfPaths = paths.slice();\r\n  return obj => copyOfPaths.reduce((acc: any, part: string) => acc && acc[part], obj);\r\n}\r\n\r\n/**\r\n * The generated function is faster than:\r\n * - pluck (Observable operator)\r\n * - memoize\r\n *\r\n * @ignore\r\n */\r\nfunction fastPropGetter(paths: string[]): (x: any) => any {\r\n  const segments = paths;\r\n  let seg = 'store.' + segments[0];\r\n  let i = 0;\r\n  const l = segments.length;\r\n\r\n  let expr = seg;\r\n  while (++i < l) {\r\n    expr = expr + ' && ' + (seg = seg + '.' + segments[i]);\r\n  }\r\n\r\n  const fn = new Function('store', 'return ' + expr + ';');\r\n\r\n  return <(x: any) => any>fn;\r\n}\r\n\r\n/**\r\n * Get a deeply nested value. Example:\r\n *\r\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\r\n *\r\n * @ignore\r\n */\r\nexport function propGetter(paths: string[], config: NgxsConfig) {\r\n  if (config && config.compatibility && config.compatibility.strictContentSecurityPolicy) {\r\n    return compliantPropGetter(paths);\r\n  } else {\r\n    return fastPropGetter(paths);\r\n  }\r\n}\r\n\r\n/**\r\n * Given an array of states, it will return a object graph. Example:\r\n *    const states = [\r\n *      Cart,\r\n *      CartSaved,\r\n *      CartSavedItems\r\n *    ]\r\n *\r\n * would return:\r\n *\r\n *  const graph = {\r\n *    cart: ['saved'],\r\n *    saved: ['items'],\r\n *    items: []\r\n *  };\r\n *\r\n * @ignore\r\n */\r\nexport function buildGraph(stateClasses: StateClassInternal[]): StateKeyGraph {\r\n  const findName = (stateClass: StateClassInternal) => {\r\n    const meta = stateClasses.find(g => g === stateClass);\r\n    if (!meta) {\r\n      throw new Error(\r\n        `Child state not found: ${stateClass}. \\r\\nYou may have forgotten to add states to module`\r\n      );\r\n    }\r\n\r\n    return meta[META_KEY]!.name!;\r\n  };\r\n\r\n  return stateClasses.reduce<StateKeyGraph>(\r\n    (result: StateKeyGraph, stateClass: StateClassInternal) => {\r\n      const { name, children } = stateClass[META_KEY]!;\r\n      result[name!] = (children || []).map(findName);\r\n      return result;\r\n    },\r\n    {}\r\n  );\r\n}\r\n\r\n/**\r\n * Given a states array, returns object graph\r\n * returning the name and state metadata. Example:\r\n *\r\n *  const graph = {\r\n *    cart: { metadata }\r\n *  };\r\n *\r\n * @ignore\r\n */\r\nexport function nameToState(states: StateClassInternal[]): PlainObjectOf<StateClassInternal> {\r\n  return states.reduce<PlainObjectOf<StateClassInternal>>(\r\n    (result: PlainObjectOf<StateClassInternal>, stateClass: StateClassInternal) => {\r\n      const meta = stateClass[META_KEY]!;\r\n      result[meta.name!] = stateClass;\r\n      return result;\r\n    },\r\n    {}\r\n  );\r\n}\r\n\r\n/**\r\n * Given a object relationship graph will return the full path\r\n * for the child items. Example:\r\n *\r\n *  const graph = {\r\n *    cart: ['saved'],\r\n *    saved: ['items'],\r\n *    items: []\r\n *  };\r\n *\r\n * would return:\r\n *\r\n *  const r = {\r\n *    cart: 'cart',\r\n *    saved: 'cart.saved',\r\n *    items: 'cart.saved.items'\r\n *  };\r\n *\r\n * @ignore\r\n */\r\nexport function findFullParentPath(\r\n  obj: StateKeyGraph,\r\n  newObj: PlainObjectOf<string> = {}\r\n): PlainObjectOf<string> {\r\n  const visit = (child: StateKeyGraph, keyToFind: string): string | null => {\r\n    for (const key in child) {\r\n      if (child.hasOwnProperty(key) && child[key].indexOf(keyToFind) >= 0) {\r\n        const parent = visit(child, key);\r\n        return parent !== null ? `${parent}.${key}` : key;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  for (const key in obj) {\r\n    if (obj.hasOwnProperty(key)) {\r\n      const parent = visit(obj, key);\r\n      newObj[key] = parent ? `${parent}.${key}` : key;\r\n    }\r\n  }\r\n\r\n  return newObj;\r\n}\r\n\r\n/**\r\n * Given a object graph, it will return the items topologically sorted Example:\r\n *\r\n *  const graph = {\r\n *    cart: ['saved'],\r\n *    saved: ['items'],\r\n *    items: []\r\n *  };\r\n *\r\n * would return:\r\n *\r\n *  const results = [\r\n *    'items',\r\n *    'saved',\r\n *    'cart'\r\n *  ];\r\n *\r\n * @ignore\r\n */\r\nexport function topologicalSort(graph: StateKeyGraph): string[] {\r\n  const sorted: string[] = [];\r\n  const visited: PlainObjectOf<boolean> = {};\r\n\r\n  const visit = (name: string, ancestors: string[] = []) => {\r\n    if (!Array.isArray(ancestors)) {\r\n      ancestors = [];\r\n    }\r\n\r\n    ancestors.push(name);\r\n    visited[name] = true;\r\n\r\n    graph[name].forEach((dep: string) => {\r\n      if (ancestors.indexOf(dep) >= 0) {\r\n        throw new Error(\r\n          `Circular dependency '${dep}' is required by '${name}': ${ancestors.join(' -> ')}`\r\n        );\r\n      }\r\n\r\n      if (visited[dep]) {\r\n        return;\r\n      }\r\n\r\n      visit(dep, ancestors.slice(0));\r\n    });\r\n\r\n    if (sorted.indexOf(name) < 0) {\r\n      sorted.push(name);\r\n    }\r\n  };\r\n\r\n  Object.keys(graph).forEach(k => visit(k));\r\n\r\n  return sorted.reverse();\r\n}\r\n\r\n/**\r\n * Returns if the parameter is a object or not.\r\n *\r\n * @ignore\r\n */\r\nexport function isObject(obj: any) {\r\n  return (typeof obj === 'object' && obj !== null) || typeof obj === 'function';\r\n}\r\n\r\nexport function getStateDiffChanges<T>(\r\n  mappedStore: MappedStore,\r\n  diff: RootStateDiff<T>\r\n): NgxsSimpleChange {\r\n  const previousValue: T = getValue(diff.currentAppState, mappedStore.depth);\r\n  const currentValue: T = getValue(diff.newAppState, mappedStore.depth);\r\n  return new NgxsSimpleChange(previousValue, currentValue, !mappedStore.isInitialised);\r\n}\r\n","import { OperatorFunction, Observable } from 'rxjs';\r\nimport { map, filter } from 'rxjs/operators';\r\nimport { getActionTypeFromInstance } from '../utils/utils';\r\nimport { ActionContext, ActionStatus } from '../actions-stream';\r\n\r\nexport interface ActionCompletion<T = any, E = Error> {\r\n  action: T;\r\n  result: {\r\n    successful: boolean;\r\n    canceled: boolean;\r\n    error?: E;\r\n  };\r\n}\r\n\r\nexport function ofAction<T>(allowedType: any): OperatorFunction<ActionContext, T>;\r\nexport function ofAction<T>(...allowedTypes: any[]): OperatorFunction<ActionContext, T>;\r\n\r\n/**\r\n * RxJS operator for selecting out specific actions.\r\n *\r\n * This will grab actions that have just been dispatched as well as actions that have completed\r\n */\r\nexport function ofAction(...allowedTypes: any[]) {\r\n  return ofActionOperator(allowedTypes);\r\n}\r\n\r\n/**\r\n * RxJS operator for selecting out specific actions.\r\n *\r\n * This will ONLY grab actions that have just been dispatched\r\n */\r\nexport function ofActionDispatched(...allowedTypes: any[]) {\r\n  return ofActionOperator(allowedTypes, [ActionStatus.Dispatched]);\r\n}\r\n\r\n/**\r\n * RxJS operator for selecting out specific actions.\r\n *\r\n * This will ONLY grab actions that have just been successfully completed\r\n */\r\nexport function ofActionSuccessful(...allowedTypes: any[]) {\r\n  return ofActionOperator(allowedTypes, [ActionStatus.Successful]);\r\n}\r\n\r\n/**\r\n * RxJS operator for selecting out specific actions.\r\n *\r\n * This will ONLY grab actions that have just been canceled\r\n */\r\nexport function ofActionCanceled(...allowedTypes: any[]) {\r\n  return ofActionOperator(allowedTypes, [ActionStatus.Canceled]);\r\n}\r\n\r\n/**\r\n * RxJS operator for selecting out specific actions.\r\n *\r\n * This will ONLY grab actions that have just been completed\r\n */\r\nexport function ofActionCompleted(...allowedTypes: any[]) {\r\n  const allowedStatuses = [\r\n    ActionStatus.Successful,\r\n    ActionStatus.Canceled,\r\n    ActionStatus.Errored\r\n  ];\r\n  return ofActionOperator(allowedTypes, allowedStatuses, mapActionResult);\r\n}\r\n\r\n/**\r\n * RxJS operator for selecting out specific actions.\r\n *\r\n * This will ONLY grab actions that have just thrown an error\r\n */\r\nexport function ofActionErrored(...allowedTypes: any[]) {\r\n  return ofActionOperator(allowedTypes, [ActionStatus.Errored]);\r\n}\r\n\r\nfunction ofActionOperator<T = any>(\r\n  allowedTypes: any[],\r\n  statuses?: ActionStatus[],\r\n  mapOperator: () => OperatorFunction<ActionContext, T> = mapAction\r\n) {\r\n  const allowedMap = createAllowedActionTypesMap(allowedTypes);\r\n  const allowedStatusMap = statuses && createAllowedStatusesMap(statuses);\r\n  return function(o: Observable<ActionContext>) {\r\n    return o.pipe(\r\n      filterStatus(allowedMap, allowedStatusMap),\r\n      mapOperator()\r\n    );\r\n  };\r\n}\r\n\r\nfunction filterStatus(allowedTypes: FilterMap, allowedStatuses?: FilterMap) {\r\n  return filter((ctx: ActionContext) => {\r\n    const actionType = getActionTypeFromInstance(ctx.action)!;\r\n    const typeMatch = allowedTypes[actionType];\r\n    const statusMatch = allowedStatuses ? allowedStatuses[ctx.status] : true;\r\n    return typeMatch && statusMatch;\r\n  });\r\n}\r\n\r\nfunction mapActionResult(): OperatorFunction<ActionContext, ActionCompletion> {\r\n  return map(({ action, status, error }: ActionContext) => {\r\n    return <ActionCompletion>{\r\n      action,\r\n      result: {\r\n        successful: ActionStatus.Successful === status,\r\n        canceled: ActionStatus.Canceled === status,\r\n        error\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\nfunction mapAction<T = any>(): OperatorFunction<ActionContext, T> {\r\n  return map((ctx: ActionContext) => <T>ctx.action);\r\n}\r\n\r\ninterface FilterMap {\r\n  [key: string]: boolean;\r\n}\r\n\r\nfunction createAllowedActionTypesMap(types: any[]): FilterMap {\r\n  return types.reduce(\r\n    (filterMap: FilterMap, klass: any) => {\r\n      filterMap[getActionTypeFromInstance(klass)!] = true;\r\n      return filterMap;\r\n    },\r\n    <FilterMap>{}\r\n  );\r\n}\r\n\r\nfunction createAllowedStatusesMap(statuses: ActionStatus[]): FilterMap {\r\n  return statuses.reduce(\r\n    (filterMap: FilterMap, status: ActionStatus) => {\r\n      filterMap[status] = true;\r\n      return filterMap;\r\n    },\r\n    <FilterMap>{}\r\n  );\r\n}\r\n","import { MonoTypeOperatorFunction, Observable, Observer } from 'rxjs';\r\nimport { NgxsExecutionStrategy } from '../execution/symbols';\r\n\r\n/**\r\n * Returns operator that will run\r\n * `subscribe` outside of the ngxs execution context\r\n */\r\nexport function leaveNgxs<T>(\r\n  ngxsExecutionStrategy: NgxsExecutionStrategy\r\n): MonoTypeOperatorFunction<T> {\r\n  return (source: Observable<T>) => {\r\n    return new Observable((sink: Observer<T>) => {\r\n      return source.subscribe({\r\n        next(value) {\r\n          ngxsExecutionStrategy.leave(() => sink.next(value));\r\n        },\r\n        error(error) {\r\n          ngxsExecutionStrategy.leave(() => sink.error(error));\r\n        },\r\n        complete() {\r\n          ngxsExecutionStrategy.leave(() => sink.complete());\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\n\r\nimport { NgxsExecutionStrategy, NGXS_EXECUTION_STRATEGY } from './symbols';\r\n\r\n@Injectable()\r\nexport class InternalNgxsExecutionStrategy implements NgxsExecutionStrategy {\r\n  constructor(\r\n    @Inject(NGXS_EXECUTION_STRATEGY) private _executionStrategy: NgxsExecutionStrategy\r\n  ) {}\r\n\r\n  enter<T>(func: () => T): T {\r\n    return this._executionStrategy.enter(func);\r\n  }\r\n\r\n  leave<T>(func: () => T): T {\r\n    return this._executionStrategy.leave(func);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\nimport { leaveNgxs } from './operators/leave-ngxs';\r\nimport { InternalNgxsExecutionStrategy } from './execution/internal-ngxs-execution-strategy';\r\n\r\n/**\r\n * Status of a dispatched action\r\n */\r\nexport const enum ActionStatus {\r\n  Dispatched = 'DISPATCHED',\r\n  Successful = 'SUCCESSFUL',\r\n  Canceled = 'CANCELED',\r\n  Errored = 'ERRORED'\r\n}\r\n\r\nexport interface ActionContext<T = any> {\r\n  status: ActionStatus;\r\n  action: T;\r\n  error?: Error;\r\n}\r\n\r\n/**\r\n * Custom Subject that ensures that subscribers are notified of values in the order that they arrived.\r\n * A standard Subject does not have this guarantee.\r\n * For example, given the following code:\r\n * ```typescript\r\n *   const subject = new Subject<string>();\r\n     subject.subscribe(value => {\r\n       if (value === 'start') subject.next('end');\r\n     });\r\n     subject.subscribe(value => { });\r\n     subject.next('start');\r\n * ```\r\n * When `subject` is a standard `Subject<T>` the second subscriber would recieve `end` and then `start`.\r\n * When `subject` is a `OrderedSubject<T>` the second subscriber would recieve `start` and then `end`.\r\n */\r\nexport class OrderedSubject<T> extends Subject<T> {\r\n  private _itemQueue: T[] = [];\r\n  private _busyPushingNext = false;\r\n\r\n  next(value?: T): void {\r\n    if (this._busyPushingNext) {\r\n      this._itemQueue.unshift(value!);\r\n      return;\r\n    }\r\n    this._busyPushingNext = true;\r\n    super.next(value);\r\n    while (this._itemQueue.length > 0) {\r\n      const nextValue = this._itemQueue.pop();\r\n      super.next(nextValue);\r\n    }\r\n    this._busyPushingNext = false;\r\n  }\r\n}\r\n\r\n/**\r\n * Internal Action stream that is emitted anytime an action is dispatched.\r\n */\r\n@Injectable()\r\nexport class InternalActions extends OrderedSubject<ActionContext> {}\r\n\r\n/**\r\n * Action stream that is emitted anytime an action is dispatched.\r\n *\r\n * You can listen to this in services to react without stores.\r\n */\r\n@Injectable()\r\nexport class Actions extends Observable<any> {\r\n  // This has to be `Observable<ActionContext>` in the v4. Because `InternalActions`\r\n  // is a `Subject<ActionContext>`. Leave it as `any` to avoid breaking changes\r\n  constructor(\r\n    internalActions$: InternalActions,\r\n    internalExecutionStrategy: InternalNgxsExecutionStrategy\r\n  ) {\r\n    super(observer => {\r\n      const childSubscription = internalActions$\r\n        .pipe(leaveNgxs(internalExecutionStrategy))\r\n        .subscribe({\r\n          next: ctx => observer.next(ctx),\r\n          error: error => observer.error(error),\r\n          complete: () => observer.complete()\r\n        });\r\n\r\n      observer.add(childSubscription);\r\n    });\r\n  }\r\n}\r\n","export type StateFn = (...args: any[]) => any;\r\n\r\n/**\r\n * Composes a array of functions from left to right. Example:\r\n *\r\n *      compose([fn, final])(state, action);\r\n *\r\n * then the funcs have a signature like:\r\n *\r\n *      function fn (state, action, next) {\r\n *          console.log('here', state, action, next);\r\n *          return next(state, action);\r\n *      }\r\n *\r\n *      function final (state, action) {\r\n *          console.log('here', state, action);\r\n *          return state;\r\n *      }\r\n *\r\n * the last function should not call `next`.\r\n *\r\n * @ignore\r\n */\r\nexport const compose = (funcs: StateFn[]) => (...args: any[]) => {\r\n  const curr = funcs.shift()!;\r\n  return curr(...args, (...nextArgs: any[]) => compose(funcs)(...nextArgs));\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { PlainObject } from '@ngxs/store/internals';\r\n\r\n/**\r\n * BehaviorSubject of the entire state.\r\n * @ignore\r\n */\r\n@Injectable()\r\nexport class StateStream extends BehaviorSubject<PlainObject> {\r\n  constructor() {\r\n    super({});\r\n  }\r\n}\r\n","import { Inject, Injectable, Optional, SkipSelf } from '@angular/core';\r\nimport { NGXS_PLUGINS, NgxsPlugin, NgxsPluginFn } from './symbols';\r\n\r\n@Injectable()\r\nexport class PluginManager {\r\n  public plugins: NgxsPluginFn[] = [];\r\n\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n    private _parentManager: PluginManager,\r\n    @Inject(NGXS_PLUGINS)\r\n    @Optional()\r\n    private _pluginHandlers: NgxsPlugin[]\r\n  ) {\r\n    this.registerHandlers();\r\n  }\r\n\r\n  private get rootPlugins(): NgxsPluginFn[] {\r\n    return (this._parentManager && this._parentManager.plugins) || this.plugins;\r\n  }\r\n\r\n  private registerHandlers(): void {\r\n    const pluginHandlers: NgxsPluginFn[] = this.getPluginHandlers();\r\n    this.rootPlugins.push(...pluginHandlers);\r\n  }\r\n\r\n  private getPluginHandlers(): NgxsPluginFn[] {\r\n    const handlers: NgxsPlugin[] = this._pluginHandlers || [];\r\n    return handlers.map(\r\n      (plugin: NgxsPlugin) =>\r\n        (plugin.handle ? plugin.handle.bind(plugin) : plugin) as NgxsPluginFn\r\n    );\r\n  }\r\n}\r\n","import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { EMPTY, forkJoin, Observable, of, Subject, throwError } from 'rxjs';\r\nimport { exhaustMap, filter, shareReplay, take } from 'rxjs/operators';\r\n\r\nimport { compose } from '../utils/compose';\r\nimport { ActionContext, ActionStatus, InternalActions } from '../actions-stream';\r\nimport { StateStream } from './state-stream';\r\nimport { PluginManager } from '../plugin-manager';\r\nimport { InternalNgxsExecutionStrategy } from '../execution/internal-ngxs-execution-strategy';\r\nimport { leaveNgxs } from '../operators/leave-ngxs';\r\n\r\n/**\r\n * Internal Action result stream that is emitted when an action is completed.\r\n * This is used as a method of returning the action result to the dispatcher\r\n * for the observable returned by the dispatch(...) call.\r\n * The dispatcher then asynchronously pushes the result from this stream onto the main action stream as a result.\r\n */\r\n@Injectable()\r\nexport class InternalDispatchedActionResults extends Subject<ActionContext> {}\r\n\r\n@Injectable()\r\nexport class InternalDispatcher {\r\n  constructor(\r\n    private _errorHandler: ErrorHandler,\r\n    private _actions: InternalActions,\r\n    private _actionResults: InternalDispatchedActionResults,\r\n    private _pluginManager: PluginManager,\r\n    private _stateStream: StateStream,\r\n    private _ngxsExecutionStrategy: InternalNgxsExecutionStrategy\r\n  ) {}\r\n\r\n  /**\r\n   * Dispatches event(s).\r\n   */\r\n  dispatch(actionOrActions: any | any[]): Observable<any> {\r\n    const result = this._ngxsExecutionStrategy.enter(() =>\r\n      this.dispatchByEvents(actionOrActions)\r\n    );\r\n\r\n    result.subscribe({\r\n      error: error =>\r\n        this._ngxsExecutionStrategy.leave(() => {\r\n          try {\r\n            this._errorHandler.handleError(error);\r\n          } catch {}\r\n        })\r\n    });\r\n\r\n    return result.pipe(leaveNgxs(this._ngxsExecutionStrategy));\r\n  }\r\n\r\n  private dispatchByEvents(actionOrActions: any | any[]): Observable<any> {\r\n    if (Array.isArray(actionOrActions)) {\r\n      return forkJoin(actionOrActions.map(a => this.dispatchSingle(a)));\r\n    } else {\r\n      return this.dispatchSingle(actionOrActions);\r\n    }\r\n  }\r\n\r\n  private dispatchSingle(action: any): Observable<any> {\r\n    const prevState = this._stateStream.getValue();\r\n    const plugins = this._pluginManager.plugins;\r\n\r\n    return (compose([\r\n      ...plugins,\r\n      (nextState: any, nextAction: any) => {\r\n        if (nextState !== prevState) {\r\n          this._stateStream.next(nextState);\r\n        }\r\n        const actionResult$ = this.getActionResultStream(nextAction);\r\n        actionResult$.subscribe(ctx => this._actions.next(ctx));\r\n        this._actions.next({ action: nextAction, status: ActionStatus.Dispatched });\r\n        return this.createDispatchObservable(actionResult$);\r\n      }\r\n    ])(prevState, action) as Observable<any>).pipe(shareReplay());\r\n  }\r\n\r\n  private getActionResultStream(action: any): Observable<ActionContext> {\r\n    return this._actionResults.pipe(\r\n      filter(\r\n        (ctx: ActionContext) => ctx.action === action && ctx.status !== ActionStatus.Dispatched\r\n      ),\r\n      take(1),\r\n      shareReplay()\r\n    );\r\n  }\r\n\r\n  private createDispatchObservable(actionResult$: Observable<ActionContext>): Observable<any> {\r\n    return actionResult$\r\n      .pipe(\r\n        exhaustMap((ctx: ActionContext) => {\r\n          switch (ctx.status) {\r\n            case ActionStatus.Successful:\r\n              return of(this._stateStream.getValue());\r\n            case ActionStatus.Errored:\r\n              return throwError(ctx.error);\r\n            default:\r\n              return EMPTY;\r\n          }\r\n        })\r\n      )\r\n      .pipe(shareReplay());\r\n  }\r\n}\r\n","/**\r\n * Object freeze code\r\n * https://github.com/jsdf/deep-freeze\r\n */\r\nexport const deepFreeze = (o: any) => {\r\n  Object.freeze(o);\r\n\r\n  const oIsFunction = typeof o === 'function';\r\n  const hasOwnProp = Object.prototype.hasOwnProperty;\r\n\r\n  Object.getOwnPropertyNames(o).forEach(function(prop) {\r\n    if (\r\n      hasOwnProp.call(o, prop) &&\r\n      (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true) &&\r\n      o[prop] !== null &&\r\n      (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\r\n      !Object.isFrozen(o[prop])\r\n    ) {\r\n      deepFreeze(o[prop]);\r\n    }\r\n  });\r\n\r\n  return o;\r\n};\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { NG_DEV_MODE, NG_TEST_MODE } from '../symbols';\r\nimport { Callback } from '../internal/internals';\r\n\r\n@Injectable()\r\nexport class HostEnvironment {\r\n  constructor(\r\n    @Inject(NG_DEV_MODE) public isDevMode: Callback<boolean>,\r\n    @Inject(NG_TEST_MODE) public isTestMode: Callback<boolean>\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  CONFIG_MESSAGES as MESSAGES,\r\n  VALIDATION_CODE as CODE\r\n} from '../configs/messages.config';\r\nimport { NgxsConfig } from '../symbols';\r\nimport { HostEnvironment } from '../host-environment/host-environment';\r\n\r\n@Injectable()\r\nexport class ConfigValidator {\r\n  constructor(private _host: HostEnvironment, private _config: NgxsConfig) {}\r\n\r\n  private get isIncorrectProduction(): boolean {\r\n    return !this._host.isDevMode() && this._config.developmentMode;\r\n  }\r\n\r\n  private get isIncorrectDevelopment(): boolean {\r\n    return this._host.isDevMode() && !this._config.developmentMode;\r\n  }\r\n\r\n  public verifyDevMode(): void {\r\n    if (this._host.isTestMode()) {\r\n      return;\r\n    }\r\n\r\n    if (this.isIncorrectProduction) {\r\n      console.warn(MESSAGES[CODE.INCORRECT_PRODUCTION]());\r\n    } else if (this.isIncorrectDevelopment) {\r\n      console.warn(MESSAGES[CODE.INCORRECT_DEVELOPMENT]());\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { StateOperations, StatesAndDefaults } from '../internal/internals';\r\nimport { InternalDispatcher } from '../internal/dispatcher';\r\nimport { StateStream } from './state-stream';\r\nimport { NgxsConfig } from '../symbols';\r\nimport { deepFreeze } from '../utils/freeze';\r\nimport { ConfigValidator } from '../internal/config-validator';\r\n\r\n/**\r\n * State Context factory class\r\n * @ignore\r\n */\r\n@Injectable()\r\nexport class InternalStateOperations {\r\n  constructor(\r\n    private _stateStream: StateStream,\r\n    private _dispatcher: InternalDispatcher,\r\n    private _config: NgxsConfig,\r\n    configValidator: ConfigValidator\r\n  ) {\r\n    configValidator.verifyDevMode();\r\n  }\r\n\r\n  /**\r\n   * Returns the root state operators.\r\n   */\r\n  getRootStateOperations(): StateOperations<any> {\r\n    const rootStateOperations = {\r\n      getState: () => this._stateStream.getValue(),\r\n      setState: (newState: any) => this._stateStream.next(newState),\r\n      dispatch: (actions: any[]) => this._dispatcher.dispatch(actions)\r\n    };\r\n\r\n    if (this._config.developmentMode) {\r\n      return this.ensureStateAndActionsAreImmutable(rootStateOperations);\r\n    }\r\n\r\n    return rootStateOperations;\r\n  }\r\n\r\n  private ensureStateAndActionsAreImmutable(root: StateOperations<any>): StateOperations<any> {\r\n    return {\r\n      getState: () => root.getState(),\r\n      setState: value => {\r\n        const frozenValue = deepFreeze(value);\r\n        return root.setState(frozenValue);\r\n      },\r\n      dispatch: actions => {\r\n        return root.dispatch(actions);\r\n      }\r\n    };\r\n  }\r\n\r\n  setStateToTheCurrentWithNew(results: StatesAndDefaults): void {\r\n    const stateOperations: StateOperations<any> = this.getRootStateOperations();\r\n\r\n    // Get our current stream\r\n    const currentState = stateOperations.getState();\r\n    // Set the state to the current + new\r\n    stateOperations.setState({ ...currentState, ...results.defaults });\r\n  }\r\n}\r\n","import {\r\n  CONFIG_MESSAGES as MESSAGES,\r\n  VALIDATION_CODE as CODE\r\n} from '../configs/messages.config';\r\nimport { StateOperator } from '../symbols';\r\n\r\nexport function simplePatch<T>(val: Partial<T>): StateOperator<T> {\r\n  return (existingState: Readonly<T>) => {\r\n    if (Array.isArray(val)) {\r\n      throw new Error(MESSAGES[CODE.PATCHING_ARRAY]());\r\n    } else if (typeof val !== 'object') {\r\n      throw new Error(MESSAGES[CODE.PATCHING_PRIMITIVE]());\r\n    }\r\n\r\n    const newState: any = { ...(existingState as any) };\r\n    for (const key in val) {\r\n      // deep clone for patch compatibility\r\n      // noinspection JSUnfilteredForInLoop (IDE)\r\n      newState[key] = (val as any)[key];\r\n    }\r\n\r\n    return newState as T;\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { NgxsLifeCycle, NgxsSimpleChange, StateContext, StateOperator } from '../symbols';\r\nimport { getStateDiffChanges, MappedStore } from '../internal/internals';\r\nimport { setValue, getValue } from '../utils/utils';\r\nimport { InternalStateOperations } from '../internal/state-operations';\r\nimport { simplePatch } from './state-operators';\r\n\r\n/**\r\n * State Context factory class\r\n * @ignore\r\n */\r\n@Injectable()\r\nexport class StateContextFactory {\r\n  constructor(private _internalStateOperations: InternalStateOperations) {}\r\n\r\n  /**\r\n   * Create the state context\r\n   */\r\n  createStateContext<T>(mappedStore: MappedStore): StateContext<T> {\r\n    const root = this._internalStateOperations.getRootStateOperations();\r\n\r\n    function getState(currentAppState: any): T {\r\n      return getValue(currentAppState, mappedStore.depth);\r\n    }\r\n\r\n    function setStateValue(currentAppState: any, newValue: T): any {\r\n      const newAppState = setValue(currentAppState, mappedStore.depth, newValue);\r\n      const instance: NgxsLifeCycle = mappedStore.instance;\r\n\r\n      if (instance.ngxsOnChanges) {\r\n        const change: NgxsSimpleChange = getStateDiffChanges<T>(mappedStore, {\r\n          currentAppState,\r\n          newAppState\r\n        });\r\n\r\n        instance.ngxsOnChanges(change);\r\n      }\r\n\r\n      root.setState(newAppState);\r\n      return newAppState;\r\n      // In doing this refactoring I noticed that there is a 'bug' where the\r\n      // application state is returned instead of this state slice.\r\n      // This has worked this way since the beginning see:\r\n      // https://github.com/ngxs/store/blame/324c667b4b7debd8eb979006c67ca0ae347d88cd/src/state-factory.ts\r\n      // This needs to be fixed, but is a 'breaking' change.\r\n      // I will do this fix in a subsequent PR and we can decide how to handle it.\r\n    }\r\n\r\n    function setStateFromOperator(currentAppState: any, stateOperator: StateOperator<T>) {\r\n      const local = getState(currentAppState);\r\n      const newValue = stateOperator(local);\r\n      return setStateValue(currentAppState, newValue);\r\n    }\r\n\r\n    function isStateOperator(value: T | StateOperator<T>): value is StateOperator<T> {\r\n      return typeof value === 'function';\r\n    }\r\n\r\n    return {\r\n      getState(): T {\r\n        const currentAppState = root.getState();\r\n        return getState(currentAppState);\r\n      },\r\n      patchState(val: Partial<T>): T {\r\n        const currentAppState = root.getState();\r\n        const patchOperator = simplePatch<T>(val);\r\n        return setStateFromOperator(currentAppState, patchOperator);\r\n      },\r\n      setState(val: T | StateOperator<T>): T {\r\n        const currentAppState = root.getState();\r\n        return isStateOperator(val)\r\n          ? setStateFromOperator(currentAppState, val)\r\n          : setStateValue(currentAppState, val);\r\n      },\r\n      dispatch(actions: any | any[]): Observable<void> {\r\n        return root.dispatch(actions);\r\n      }\r\n    };\r\n  }\r\n}\r\n","import {\r\n  getStoreMetadata,\r\n  MetaDataModel,\r\n  StateClassInternal,\r\n  StatesByName\r\n} from '../internal/internals';\r\nimport {\r\n  CONFIG_MESSAGES as MESSAGES,\r\n  VALIDATION_CODE as CODE\r\n} from '../configs/messages.config';\r\n\r\nexport abstract class StoreValidators {\r\n  public static stateNameRegex: RegExp = new RegExp('^[a-zA-Z0-9_]+$');\r\n\r\n  public static stateNameErrorMessage(name: string) {\r\n    return MESSAGES[CODE.STATE_NAME](name);\r\n  }\r\n\r\n  public static checkCorrectStateName(name: string | null) {\r\n    if (!name) {\r\n      throw new Error(MESSAGES[CODE.STATE_NAME_PROPERTY]());\r\n    }\r\n\r\n    if (!this.stateNameRegex.test(name)) {\r\n      throw new Error(this.stateNameErrorMessage(name));\r\n    }\r\n  }\r\n\r\n  public static checkStateNameIsUnique(\r\n    state: StateClassInternal,\r\n    statesByName: StatesByName\r\n  ): string {\r\n    const meta: MetaDataModel = this.getValidStateMeta(state);\r\n    const stateName: string = meta!.name as string;\r\n    const existingState = statesByName[stateName];\r\n    if (existingState && existingState !== state) {\r\n      throw new Error(MESSAGES[CODE.STATE_UNIQUE](stateName, state.name, existingState.name));\r\n    }\r\n    return stateName;\r\n  }\r\n\r\n  public static getValidStateMeta(state: StateClassInternal): MetaDataModel {\r\n    const meta: MetaDataModel = getStoreMetadata(state);\r\n    if (!meta) {\r\n      throw new Error(MESSAGES[CODE.STATE_DECORATOR]());\r\n    }\r\n\r\n    return meta;\r\n  }\r\n}\r\n","import { Injectable, Injector, Optional, SkipSelf, Inject } from '@angular/core';\r\nimport { forkJoin, from, Observable, of, throwError } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  defaultIfEmpty,\r\n  filter,\r\n  map,\r\n  mergeMap,\r\n  shareReplay,\r\n  takeUntil\r\n} from 'rxjs/operators';\r\n\r\nimport { META_KEY, NgxsConfig } from '../symbols';\r\nimport {\r\n  buildGraph,\r\n  findFullParentPath,\r\n  isObject,\r\n  MappedStore,\r\n  MetaDataModel,\r\n  nameToState,\r\n  propGetter,\r\n  StateClassInternal,\r\n  StateKeyGraph,\r\n  StatesAndDefaults,\r\n  StatesByName,\r\n  topologicalSort\r\n} from './internals';\r\nimport { getActionTypeFromInstance, getValue, setValue } from '../utils/utils';\r\nimport { ofActionDispatched } from '../operators/of-action';\r\nimport { ActionContext, ActionStatus, InternalActions } from '../actions-stream';\r\nimport { InternalDispatchedActionResults } from '../internal/dispatcher';\r\nimport { StateContextFactory } from '../internal/state-context-factory';\r\nimport { StoreValidators } from '../utils/store-validators';\r\nimport { INITIAL_STATE_TOKEN, PlainObjectOf } from '@ngxs/store/internals';\r\n\r\n/**\r\n * State factory class\r\n * @ignore\r\n */\r\n@Injectable()\r\nexport class StateFactory {\r\n  private _connected = false;\r\n\r\n  constructor(\r\n    private _injector: Injector,\r\n    private _config: NgxsConfig,\r\n    @Optional()\r\n    @SkipSelf()\r\n    private _parentFactory: StateFactory,\r\n    private _actions: InternalActions,\r\n    private _actionResults: InternalDispatchedActionResults,\r\n    private _stateContextFactory: StateContextFactory,\r\n    @Optional()\r\n    @Inject(INITIAL_STATE_TOKEN)\r\n    private _initialState: any\r\n  ) {}\r\n\r\n  private _states: MappedStore[] = [];\r\n\r\n  public get states(): MappedStore[] {\r\n    return this._parentFactory ? this._parentFactory.states : this._states;\r\n  }\r\n\r\n  private _statesByName: StatesByName = {};\r\n\r\n  public get statesByName(): StatesByName {\r\n    return this._parentFactory ? this._parentFactory.statesByName : this._statesByName;\r\n  }\r\n\r\n  private static cloneDefaults(defaults: any): any {\r\n    let value = {};\r\n\r\n    if (Array.isArray(defaults)) {\r\n      value = defaults.slice();\r\n    } else if (isObject(defaults)) {\r\n      value = { ...defaults };\r\n    } else if (defaults === undefined) {\r\n      value = {};\r\n    } else {\r\n      value = defaults;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  private static checkStatesAreValid(stateClasses: StateClassInternal[]): void {\r\n    stateClasses.forEach(StoreValidators.getValidStateMeta);\r\n  }\r\n\r\n  /**\r\n   * Add a new state to the global defs.\r\n   */\r\n  add(stateClasses: StateClassInternal[]): MappedStore[] {\r\n    StateFactory.checkStatesAreValid(stateClasses);\r\n    const { newStates } = this.addToStatesMap(stateClasses);\r\n    if (!newStates.length) return [];\r\n\r\n    const stateGraph: StateKeyGraph = buildGraph(newStates);\r\n    const sortedStates: string[] = topologicalSort(stateGraph);\r\n    const depths: PlainObjectOf<string> = findFullParentPath(stateGraph);\r\n    const nameGraph: PlainObjectOf<StateClassInternal> = nameToState(newStates);\r\n    const bootstrappedStores: MappedStore[] = [];\r\n\r\n    for (const name of sortedStates) {\r\n      const stateClass: StateClassInternal = nameGraph[name];\r\n      const depth: string = depths[name];\r\n      const meta: MetaDataModel = stateClass[META_KEY]!;\r\n\r\n      this.addRuntimeInfoToMeta(meta, depth);\r\n\r\n      const stateMap: MappedStore = {\r\n        name,\r\n        depth,\r\n        isInitialised: false,\r\n        actions: meta.actions,\r\n        instance: this._injector.get(stateClass),\r\n        defaults: StateFactory.cloneDefaults(meta.defaults)\r\n      };\r\n\r\n      // ensure our store hasn't already been added\r\n      // but don't throw since it could be lazy\r\n      // loaded from different paths\r\n      if (!this.hasBeenMountedAndBootstrapped(name, depth)) {\r\n        bootstrappedStores.push(stateMap);\r\n      }\r\n\r\n      this.states.push(stateMap);\r\n    }\r\n\r\n    return bootstrappedStores;\r\n  }\r\n\r\n  /**\r\n   * Add a set of states to the store and return the defaults\r\n   */\r\n  addAndReturnDefaults(stateClasses: StateClassInternal[]): StatesAndDefaults {\r\n    const classes: StateClassInternal[] = stateClasses || [];\r\n\r\n    const mappedStores: MappedStore[] = this.add(classes);\r\n    const defaults = mappedStores.reduce(\r\n      (result: any, mappedStore: MappedStore) =>\r\n        setValue(result, mappedStore.depth, mappedStore.defaults),\r\n      {}\r\n    );\r\n    return { defaults, states: mappedStores };\r\n  }\r\n\r\n  /**\r\n   * Bind the actions to the handlers\r\n   */\r\n  connectActionHandlers() {\r\n    if (this._connected) return;\r\n    this._actions\r\n      .pipe(\r\n        filter((ctx: ActionContext) => ctx.status === ActionStatus.Dispatched),\r\n        mergeMap(({ action }) =>\r\n          this.invokeActions(this._actions, action!).pipe(\r\n            map(() => <ActionContext>{ action, status: ActionStatus.Successful }),\r\n            defaultIfEmpty(<ActionContext>{ action, status: ActionStatus.Canceled }),\r\n            catchError(error =>\r\n              of(<ActionContext>{ action, status: ActionStatus.Errored, error })\r\n            )\r\n          )\r\n        )\r\n      )\r\n      .subscribe(ctx => this._actionResults.next(ctx));\r\n    this._connected = true;\r\n  }\r\n\r\n  /**\r\n   * Invoke actions on the states.\r\n   */\r\n  invokeActions(actions$: InternalActions, action: any) {\r\n    const results = [];\r\n\r\n    for (const metadata of this.states) {\r\n      const type = getActionTypeFromInstance(action)!;\r\n      const actionMetas = metadata.actions[type];\r\n\r\n      if (actionMetas) {\r\n        for (const actionMeta of actionMetas) {\r\n          const stateContext = this._stateContextFactory.createStateContext(metadata);\r\n          try {\r\n            let result = metadata.instance[actionMeta.fn](stateContext, action);\r\n\r\n            if (result instanceof Promise) {\r\n              result = from(result);\r\n            }\r\n\r\n            if (result instanceof Observable) {\r\n              if (actionMeta.options.cancelUncompleted) {\r\n                // todo: ofActionDispatched should be used with action class\r\n                result = result.pipe(\r\n                  takeUntil(actions$.pipe(ofActionDispatched(action as any)))\r\n                );\r\n              }\r\n            } else {\r\n              result = of({}).pipe(shareReplay());\r\n            }\r\n\r\n            results.push(result);\r\n          } catch (e) {\r\n            results.push(throwError(e));\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!results.length) {\r\n      results.push(of({}));\r\n    }\r\n\r\n    return forkJoin(results);\r\n  }\r\n\r\n  private addToStatesMap(\r\n    stateClasses: StateClassInternal[]\r\n  ): { newStates: StateClassInternal[] } {\r\n    const newStates: StateClassInternal[] = [];\r\n    const statesMap: StatesByName = this.statesByName;\r\n\r\n    for (const stateClass of stateClasses) {\r\n      const stateName: string = StoreValidators.checkStateNameIsUnique(stateClass, statesMap);\r\n      const unmountedState = !statesMap[stateName];\r\n      if (unmountedState) {\r\n        newStates.push(stateClass);\r\n        statesMap[stateName] = stateClass;\r\n      }\r\n    }\r\n\r\n    return { newStates };\r\n  }\r\n\r\n  private addRuntimeInfoToMeta(meta: MetaDataModel, depth: string): void {\r\n    meta.path = depth;\r\n    meta.selectFromAppState = propGetter(depth.split('.'), this._config);\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   * the method checks if the state has already been added to the tree\r\n   * and completed the life cycle\r\n   * @param name\r\n   * @param path\r\n   */\r\n  private hasBeenMountedAndBootstrapped(name: string, path: string): boolean {\r\n    const valueIsBootstrappedInInitialState: boolean =\r\n      getValue(this._initialState, path) !== undefined;\r\n    return this.statesByName[name] && valueIsBootstrappedInInitialState;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxsBootstrapper, PlainObject } from '@ngxs/store/internals';\r\nimport { filter, mergeMap, tap } from 'rxjs/operators';\r\n\r\nimport { StateContextFactory } from './state-context-factory';\r\nimport { InternalStateOperations } from './state-operations';\r\nimport { getStateDiffChanges, MappedStore, StatesAndDefaults } from './internals';\r\nimport { NgxsLifeCycle, NgxsSimpleChange, StateContext } from '../symbols';\r\n\r\n@Injectable()\r\nexport class LifecycleStateManager {\r\n  constructor(\r\n    private internalStateOperations: InternalStateOperations,\r\n    private stateContextFactory: StateContextFactory,\r\n    private bootstrapper: NgxsBootstrapper\r\n  ) {}\r\n\r\n  ngxsBootstrap<T>(action: T, results: StatesAndDefaults | undefined): void {\r\n    this.internalStateOperations\r\n      .getRootStateOperations()\r\n      .dispatch(action)\r\n      .pipe(\r\n        filter(() => !!results),\r\n        tap(() => this.invokeInit(results!.states)),\r\n        mergeMap(() => this.bootstrapper.appBootstrapped$),\r\n        filter(appBootstrapped => !!appBootstrapped)\r\n      )\r\n      .subscribe(() => this.invokeBootstrap(results!.states));\r\n  }\r\n\r\n  /**\r\n   * Invoke the init function on the states.\r\n   */\r\n  invokeInit(mappedStores: MappedStore[]): void {\r\n    for (const mappedStore of mappedStores) {\r\n      const instance: NgxsLifeCycle = mappedStore.instance;\r\n\r\n      if (instance.ngxsOnChanges) {\r\n        const currentAppState: PlainObject = {};\r\n        const newAppState: PlainObject = this.internalStateOperations\r\n          .getRootStateOperations()\r\n          .getState();\r\n\r\n        const firstDiffChange: NgxsSimpleChange = getStateDiffChanges(mappedStore, {\r\n          currentAppState,\r\n          newAppState\r\n        });\r\n\r\n        instance.ngxsOnChanges(firstDiffChange);\r\n      }\r\n\r\n      if (instance.ngxsOnInit) {\r\n        instance.ngxsOnInit(this.getStateContext(mappedStore));\r\n      }\r\n\r\n      mappedStore.isInitialised = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invoke the bootstrap function on the states.\r\n   */\r\n  invokeBootstrap(mappedStores: MappedStore[]) {\r\n    for (const mappedStore of mappedStores) {\r\n      const instance: NgxsLifeCycle = mappedStore.instance;\r\n      if (instance.ngxsAfterBootstrap) {\r\n        instance.ngxsAfterBootstrap(this.getStateContext(mappedStore));\r\n      }\r\n    }\r\n  }\r\n\r\n  private getStateContext(mappedStore: MappedStore): StateContext<any> {\r\n    return this.stateContextFactory.createStateContext(mappedStore);\r\n  }\r\n}\r\n","import { memoize } from '@ngxs/store/internals';\r\n\r\nimport {\r\n  ensureSelectorMetadata,\r\n  getSelectorMetadata,\r\n  getStoreMetadata,\r\n  globalSelectorOptions,\r\n  SelectFromState,\r\n  SelectorMetaDataModel,\r\n  SharedSelectorOptions\r\n} from '../internal/internals';\r\n\r\nconst SELECTOR_OPTIONS_META_KEY = 'NGXS_SELECTOR_OPTIONS_META';\r\n\r\nexport const selectorOptionsMetaAccessor = {\r\n  getOptions: (target: any): SharedSelectorOptions => {\r\n    return (target && (<any>target)[SELECTOR_OPTIONS_META_KEY]) || {};\r\n  },\r\n  defineOptions: (target: any, options: SharedSelectorOptions) => {\r\n    if (!target) return;\r\n    (<any>target)[SELECTOR_OPTIONS_META_KEY] = options;\r\n  }\r\n};\r\n\r\ninterface CreationMetadata {\r\n  containerClass: any;\r\n  selectorName: string;\r\n  getSelectorOptions?: () => SharedSelectorOptions;\r\n}\r\n\r\ninterface RuntimeSelectorInfo {\r\n  selectorOptions: SharedSelectorOptions;\r\n  argumentSelectorFunctions: ((state: any) => any)[];\r\n}\r\n\r\n/**\r\n * Function for creating a selector\r\n * @param selectors The selectors to use to create the arguments of this function\r\n * @param originalFn The original function being made into a selector\r\n * @param creationMetadata\r\n */\r\nexport function createSelector<T extends (...args: any[]) => any>(\r\n  selectors: any[] | undefined,\r\n  originalFn: T,\r\n  creationMetadata?: CreationMetadata\r\n) {\r\n  const containerClass = creationMetadata && creationMetadata.containerClass;\r\n  const wrappedFn = function wrappedSelectorFn(...args: any[]) {\r\n    const returnValue = originalFn.apply(containerClass, args);\r\n    if (returnValue instanceof Function) {\r\n      const innerMemoizedFn = memoize.apply(null, [returnValue]);\r\n      return innerMemoizedFn;\r\n    }\r\n    return returnValue;\r\n  } as T;\r\n  const memoizedFn = memoize(wrappedFn);\r\n  const selectorMetaData = setupSelectorMetadata<T>(memoizedFn, originalFn, creationMetadata);\r\n  let runtimeInfo: RuntimeSelectorInfo;\r\n\r\n  const selectFromAppState = (state: any) => {\r\n    const results = [];\r\n\r\n    runtimeInfo = runtimeInfo || getRuntimeSelectorInfo(selectorMetaData, selectors);\r\n    const { suppressErrors } = runtimeInfo.selectorOptions;\r\n    const { argumentSelectorFunctions } = runtimeInfo;\r\n\r\n    // Determine arguments from the app state using the selectors\r\n    results.push(...argumentSelectorFunctions.map(argFn => argFn(state)));\r\n\r\n    // if the lambda tries to access a something on the\r\n    // state that doesn't exist, it will throw a TypeError.\r\n    // since this is quite usual behaviour, we simply return undefined if so.\r\n    try {\r\n      return memoizedFn(...results);\r\n    } catch (ex) {\r\n      if (ex instanceof TypeError && suppressErrors) {\r\n        return undefined;\r\n      }\r\n\r\n      throw ex;\r\n    }\r\n  };\r\n\r\n  selectorMetaData.selectFromAppState = selectFromAppState;\r\n\r\n  return memoizedFn;\r\n}\r\n\r\nfunction setupSelectorMetadata<T extends (...args: any[]) => any>(\r\n  memoizedFn: T,\r\n  originalFn: T,\r\n  creationMetadata: CreationMetadata | undefined\r\n) {\r\n  const selectorMetaData = ensureSelectorMetadata(memoizedFn);\r\n  selectorMetaData.originalFn = originalFn;\r\n  let getExplicitSelectorOptions = () => ({});\r\n  if (creationMetadata) {\r\n    selectorMetaData.containerClass = creationMetadata.containerClass;\r\n    selectorMetaData.selectorName = creationMetadata.selectorName;\r\n    getExplicitSelectorOptions =\r\n      creationMetadata.getSelectorOptions || getExplicitSelectorOptions;\r\n  }\r\n  const selectorMetaDataClone = { ...selectorMetaData };\r\n  selectorMetaData.getSelectorOptions = () =>\r\n    getCustomSelectorOptions(selectorMetaDataClone, getExplicitSelectorOptions());\r\n  return selectorMetaData;\r\n}\r\n\r\nfunction getRuntimeSelectorInfo(\r\n  selectorMetaData: SelectorMetaDataModel,\r\n  selectors: any[] | undefined = []\r\n): RuntimeSelectorInfo {\r\n  const selectorOptions = selectorMetaData.getSelectorOptions();\r\n  const selectorsToApply = getSelectorsToApply(selectorMetaData, selectors);\r\n  const argumentSelectorFunctions = selectorsToApply.map(selector => getSelectorFn(selector));\r\n  return {\r\n    selectorOptions,\r\n    argumentSelectorFunctions\r\n  };\r\n}\r\n\r\nfunction getCustomSelectorOptions(\r\n  selectorMetaData: SelectorMetaDataModel,\r\n  explicitOptions: SharedSelectorOptions\r\n): SharedSelectorOptions {\r\n  const selectorOptions: SharedSelectorOptions = {\r\n    ...globalSelectorOptions.get(),\r\n    ...(selectorOptionsMetaAccessor.getOptions(selectorMetaData.containerClass) || {}),\r\n    ...(selectorOptionsMetaAccessor.getOptions(selectorMetaData.originalFn) || {}),\r\n    ...(selectorMetaData.getSelectorOptions() || {}),\r\n    ...explicitOptions\r\n  };\r\n\r\n  return selectorOptions;\r\n}\r\n\r\nfunction getSelectorsToApply(\r\n  selectorMetaData: SelectorMetaDataModel,\r\n  selectors: any[] | undefined = []\r\n) {\r\n  const selectorsToApply = [];\r\n  const canInjectContainerState =\r\n    selectors.length === 0 || selectorMetaData.getSelectorOptions().injectContainerState;\r\n  const containerClass = selectorMetaData.containerClass;\r\n  if (containerClass && canInjectContainerState) {\r\n    // If we are on a state class, add it as the first selector parameter\r\n    const metadata = getStoreMetadata(containerClass);\r\n    if (metadata) {\r\n      selectorsToApply.push(containerClass);\r\n    }\r\n  }\r\n  if (selectors) {\r\n    selectorsToApply.push(...selectors);\r\n  }\r\n  return selectorsToApply;\r\n}\r\n\r\n/**\r\n * This function gets the selector function to be used to get the selected slice from the app state\r\n * @ignore\r\n */\r\nexport function getSelectorFn(selector: any): SelectFromState {\r\n  const metadata = getSelectorMetadata(selector) || getStoreMetadata(selector);\r\n  return (metadata && metadata.selectFromAppState) || selector;\r\n}\r\n","// tslint:disable:unified-signatures\r\nimport { Inject, Injectable, Optional, Type } from '@angular/core';\r\nimport { Observable, of, Subscription, throwError } from 'rxjs';\r\nimport { catchError, distinctUntilChanged, map, take } from 'rxjs/operators';\r\nimport { INITIAL_STATE_TOKEN, PlainObject } from '@ngxs/store/internals';\r\n\r\nimport { InternalNgxsExecutionStrategy } from './execution/internal-ngxs-execution-strategy';\r\nimport { InternalStateOperations } from './internal/state-operations';\r\nimport { getSelectorFn } from './utils/selector-utils';\r\nimport { StateStream } from './internal/state-stream';\r\nimport { leaveNgxs } from './operators/leave-ngxs';\r\nimport { NgxsConfig } from './symbols';\r\nimport { StateToken } from './state-token/state-token';\r\n\r\n@Injectable()\r\nexport class Store {\r\n  constructor(\r\n    private _stateStream: StateStream,\r\n    private _internalStateOperations: InternalStateOperations,\r\n    private _config: NgxsConfig,\r\n    private _internalExecutionStrategy: InternalNgxsExecutionStrategy,\r\n    @Optional()\r\n    @Inject(INITIAL_STATE_TOKEN)\r\n    initialStateValue: any\r\n  ) {\r\n    this.initStateStream(initialStateValue);\r\n  }\r\n\r\n  /**\r\n   * Dispatches event(s).\r\n   */\r\n  dispatch(event: any | any[]): Observable<any> {\r\n    return this._internalStateOperations.getRootStateOperations().dispatch(event);\r\n  }\r\n\r\n  /**\r\n   * Selects a slice of data from the store.\r\n   */\r\n  select<T>(selector: (state: any, ...states: any[]) => T): Observable<T>;\r\n  select<T = any>(selector: string | Type<any>): Observable<T>;\r\n  select<T>(selector: StateToken<T>): Observable<T>;\r\n  select(selector: any): Observable<any> {\r\n    const selectorFn = getSelectorFn(selector);\r\n    return this._stateStream.pipe(\r\n      map(selectorFn),\r\n      catchError((err: Error): Observable<never> | Observable<undefined> => {\r\n        // if error is TypeError we swallow it to prevent usual errors with property access\r\n        const { suppressErrors } = this._config.selectorOptions;\r\n\r\n        if (err instanceof TypeError && suppressErrors) {\r\n          return of(undefined);\r\n        }\r\n\r\n        // rethrow other errors\r\n        return throwError(err);\r\n      }),\r\n      distinctUntilChanged(),\r\n      leaveNgxs(this._internalExecutionStrategy)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Select one slice of data from the store.\r\n   */\r\n\r\n  selectOnce<T>(selector: (state: any, ...states: any[]) => T): Observable<T>;\r\n  selectOnce<T = any>(selector: string | Type<any>): Observable<T>;\r\n  selectOnce<T>(selector: StateToken<T>): Observable<T>;\r\n  selectOnce(selector: any): Observable<any> {\r\n    return this.select(selector).pipe(take(1));\r\n  }\r\n\r\n  /**\r\n   * Select a snapshot from the state.\r\n   */\r\n  selectSnapshot<T>(selector: (state: any, ...states: any[]) => T): T;\r\n  selectSnapshot<T = any>(selector: string | Type<any>): T;\r\n  selectSnapshot<T>(selector: StateToken<T>): T;\r\n  selectSnapshot(selector: any): any {\r\n    const selectorFn = getSelectorFn(selector);\r\n    return selectorFn(this._stateStream.getValue());\r\n  }\r\n\r\n  /**\r\n   * Allow the user to subscribe to the root of the state\r\n   */\r\n  subscribe(fn?: (value: any) => void): Subscription {\r\n    return this._stateStream.pipe(leaveNgxs(this._internalExecutionStrategy)).subscribe(fn);\r\n  }\r\n\r\n  /**\r\n   * Return the raw value of the state.\r\n   */\r\n  snapshot(): any {\r\n    return this._internalStateOperations.getRootStateOperations().getState();\r\n  }\r\n\r\n  /**\r\n   * Reset the state to a specific point in time. This method is useful\r\n   * for plugin's who need to modify the state directly or unit testing.\r\n   */\r\n  reset(state: any) {\r\n    return this._internalStateOperations.getRootStateOperations().setState(state);\r\n  }\r\n\r\n  private initStateStream(initialStateValue: any): void {\r\n    const value: PlainObject = this._stateStream.value;\r\n    const storeIsEmpty: boolean = !value || Object.keys(value).length === 0;\r\n    if (storeIsEmpty) {\r\n      const defaultStateNotEmpty: boolean = Object.keys(this._config.defaultsState).length > 0;\r\n      const storeValues: PlainObject = defaultStateNotEmpty\r\n        ? { ...this._config.defaultsState, ...initialStateValue }\r\n        : initialStateValue;\r\n\r\n      this._stateStream.next(storeValues);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Store } from '../../store';\r\nimport { NgxsConfig } from '../../symbols';\r\n\r\n/**\r\n * Allows the select decorator to get access to the DI store.\r\n * @internal only use in @Select decorator\r\n * @ignore\r\n */\r\n@Injectable()\r\nexport class SelectFactory {\r\n  public static store: Store | null = null;\r\n  public static config: NgxsConfig | null = null;\r\n\r\n  constructor(store: Store, config: NgxsConfig) {\r\n    SelectFactory.store = store;\r\n    SelectFactory.config = config;\r\n  }\r\n}\r\n","import { PlainObject } from '@ngxs/store/internals';\r\n\r\n/**\r\n * Init action\r\n */\r\nexport class InitState {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '@@INIT';\r\n  }\r\n}\r\n\r\n/**\r\n * Update action\r\n */\r\nexport class UpdateState {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '@@UPDATE_STATE';\r\n  }\r\n\r\n  constructor(public addedStates?: PlainObject) {}\r\n}\r\n","import { ReplaySubject, Observable } from 'rxjs';\r\n\r\n/**\r\n * Keep it as a single `const` variable since this `ReplaySubject`\r\n * will be private and accessible only within this file.\r\n */\r\nconst _ivyEnabledInDevMode$ = new ReplaySubject<boolean>(1);\r\n\r\n/**\r\n * Ivy exposes helper functions to the global `window.ng` object.\r\n * Those functions are `getComponent, getContext,\r\n * getListeners, getViewComponent, getHostElement, getInjector,\r\n * getRootComponents, getDirectives, getDebugNode, markDirty`\r\n * Previously, old view engine exposed `window.ng.coreTokens` and\r\n * `window.ng.probe` if an application was in development/production.\r\n * Ivy doesn't expose these functions in production. Developers will be able\r\n * to see warnings in both JIT/AOT modes, but only if an application\r\n * is in development.\r\n */\r\nexport function setIvyEnabledInDevMode(): void {\r\n  try {\r\n    // `try-catch` will also handle server-side rendering, as\r\n    // `window is not defined` will not be thrown.\r\n    const ng = (window as any).ng;\r\n    const _ivyEnabledInDevMode =\r\n      !!ng && typeof ng.getComponent === 'function' && typeof ng.markDirty === 'function';\r\n    _ivyEnabledInDevMode$.next(_ivyEnabledInDevMode);\r\n  } catch {\r\n    _ivyEnabledInDevMode$.next(false);\r\n  } finally {\r\n    _ivyEnabledInDevMode$.complete();\r\n  }\r\n}\r\n\r\nexport function ivyEnabledInDevMode(): Observable<boolean> {\r\n  return _ivyEnabledInDevMode$.asObservable();\r\n}\r\n","import { Inject, NgModule, Optional } from '@angular/core';\r\n\r\nimport { StateFactory } from '../internal/state-factory';\r\nimport { InternalStateOperations } from '../internal/state-operations';\r\nimport { Store } from '../store';\r\nimport { SelectFactory } from '../decorators/select/select-factory';\r\nimport { NgxsConfig, ROOT_STATE_TOKEN } from '../symbols';\r\nimport {\r\n  globalSelectorOptions,\r\n  StateClassInternal,\r\n  StatesAndDefaults\r\n} from '../internal/internals';\r\nimport { LifecycleStateManager } from '../internal/lifecycle-state-manager';\r\nimport { InitState } from '../actions/actions';\r\nimport { setIvyEnabledInDevMode } from '../ivy/ivy-enabled-in-dev-mode';\r\n\r\n/**\r\n * Root module\r\n * @ignore\r\n */\r\n@NgModule()\r\nexport class NgxsRootModule {\r\n  constructor(\r\n    factory: StateFactory,\r\n    internalStateOperations: InternalStateOperations,\r\n    _store: Store,\r\n    _select: SelectFactory,\r\n    @Optional()\r\n    @Inject(ROOT_STATE_TOKEN)\r\n    states: StateClassInternal[] = [],\r\n    config: NgxsConfig,\r\n    lifecycleStateManager: LifecycleStateManager\r\n  ) {\r\n    // Validate states on having the `@Injectable()` decorator in Ivy\r\n    setIvyEnabledInDevMode();\r\n\r\n    globalSelectorOptions.set(config.selectorOptions || {});\r\n\r\n    // Add stores to the state graph and return their defaults\r\n    const results: StatesAndDefaults = factory.addAndReturnDefaults(states);\r\n\r\n    internalStateOperations.setStateToTheCurrentWithNew(results);\r\n\r\n    // Connect our actions stream\r\n    factory.connectActionHandlers();\r\n\r\n    // Dispatch the init action and invoke init and bootstrap functions after\r\n    lifecycleStateManager.ngxsBootstrap(new InitState(), results);\r\n  }\r\n}\r\n","import { Inject, NgModule, Optional } from '@angular/core';\r\n\r\nimport { Store } from '../store';\r\nimport { InternalStateOperations } from '../internal/state-operations';\r\nimport { StateFactory } from '../internal/state-factory';\r\nimport { FEATURE_STATE_TOKEN } from '../symbols';\r\nimport { LifecycleStateManager } from '../internal/lifecycle-state-manager';\r\nimport { StateClassInternal, StatesAndDefaults } from '../internal/internals';\r\nimport { UpdateState } from '../actions/actions';\r\n\r\n/**\r\n * Feature module\r\n * @ignore\r\n */\r\n@NgModule()\r\nexport class NgxsFeatureModule {\r\n  constructor(\r\n    _store: Store,\r\n    internalStateOperations: InternalStateOperations,\r\n    factory: StateFactory,\r\n    @Optional()\r\n    @Inject(FEATURE_STATE_TOKEN)\r\n    states: StateClassInternal[][] = [],\r\n    lifecycleStateManager: LifecycleStateManager\r\n  ) {\r\n    // Since FEATURE_STATE_TOKEN is a multi token, we need to\r\n    // flatten it [[Feature1State, Feature2State], [Feature3State]]\r\n    const flattenedStates: StateClassInternal[] = NgxsFeatureModule.flattenStates(states);\r\n\r\n    // add stores to the state graph and return their defaults\r\n    const results: StatesAndDefaults = factory.addAndReturnDefaults(flattenedStates);\r\n\r\n    if (results.states.length) {\r\n      internalStateOperations.setStateToTheCurrentWithNew(results);\r\n\r\n      // dispatch the update action and invoke init and bootstrap functions after\r\n      lifecycleStateManager.ngxsBootstrap(new UpdateState(results.defaults), results);\r\n    }\r\n  }\r\n\r\n  private static flattenStates(states: StateClassInternal[][] = []): StateClassInternal[] {\r\n    return states.reduce(\r\n      (total: StateClassInternal[], values: StateClassInternal[]) => total.concat(values),\r\n      []\r\n    );\r\n  }\r\n}\r\n","import {\r\n  APP_BOOTSTRAP_LISTENER,\r\n  InjectionToken,\r\n  isDevMode,\r\n  ModuleWithProviders,\r\n  NgModule,\r\n  Provider\r\n} from '@angular/core';\r\nimport {\r\n  INITIAL_STATE_TOKEN,\r\n  InitialState,\r\n  isAngularInTestMode,\r\n  NGXS_STATE_CONTEXT_FACTORY,\r\n  NGXS_STATE_FACTORY,\r\n  NgxsBootstrapper,\r\n  StateClass\r\n} from '@ngxs/store/internals';\r\n\r\nimport {\r\n  FEATURE_STATE_TOKEN,\r\n  NG_DEV_MODE,\r\n  NG_TEST_MODE,\r\n  NgxsConfig,\r\n  NgxsModuleOptions,\r\n  ROOT_STATE_TOKEN\r\n} from './symbols';\r\nimport { NGXS_EXECUTION_STRATEGY } from './execution/symbols';\r\nimport { StateFactory } from './internal/state-factory';\r\nimport { StateContextFactory } from './internal/state-context-factory';\r\nimport { Actions, InternalActions } from './actions-stream';\r\nimport { LifecycleStateManager } from './internal/lifecycle-state-manager';\r\nimport { InternalDispatchedActionResults, InternalDispatcher } from './internal/dispatcher';\r\nimport { InternalStateOperations } from './internal/state-operations';\r\nimport { Store } from './store';\r\nimport { SelectFactory } from './decorators/select/select-factory';\r\nimport { StateStream } from './internal/state-stream';\r\nimport { PluginManager } from './plugin-manager';\r\nimport { NgxsRootModule } from './modules/ngxs-root.module';\r\nimport { NgxsFeatureModule } from './modules/ngxs-feature.module';\r\nimport { DispatchOutsideZoneNgxsExecutionStrategy } from './execution/dispatch-outside-zone-ngxs-execution-strategy';\r\nimport { InternalNgxsExecutionStrategy } from './execution/internal-ngxs-execution-strategy';\r\nimport { HostEnvironment } from './host-environment/host-environment';\r\nimport { ConfigValidator } from './internal/config-validator';\r\n\r\n/**\r\n * Ngxs Module\r\n */\r\n@NgModule()\r\nexport class NgxsModule {\r\n  private static readonly ROOT_OPTIONS = new InjectionToken<NgxsModuleOptions>('ROOT_OPTIONS');\r\n\r\n  /**\r\n   * Root module factory\r\n   */\r\n  public static forRoot(\r\n    states: StateClass[] = [],\r\n    options: NgxsModuleOptions = {}\r\n  ): ModuleWithProviders<NgxsRootModule> {\r\n    return {\r\n      ngModule: NgxsRootModule,\r\n      providers: [\r\n        StateFactory,\r\n        StateContextFactory,\r\n        Actions,\r\n        InternalActions,\r\n        NgxsBootstrapper,\r\n        ConfigValidator,\r\n        HostEnvironment,\r\n        LifecycleStateManager,\r\n        InternalDispatcher,\r\n        InternalDispatchedActionResults,\r\n        InternalStateOperations,\r\n        InternalNgxsExecutionStrategy,\r\n        Store,\r\n        StateStream,\r\n        SelectFactory,\r\n        PluginManager,\r\n        ...states,\r\n        ...NgxsModule.ngxsTokenProviders(states, options)\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Feature module factory\r\n   */\r\n  public static forFeature(states: StateClass[] = []): ModuleWithProviders<NgxsFeatureModule> {\r\n    return {\r\n      ngModule: NgxsFeatureModule,\r\n      providers: [\r\n        StateFactory,\r\n        PluginManager,\r\n        ...states,\r\n        {\r\n          provide: FEATURE_STATE_TOKEN,\r\n          multi: true,\r\n          useValue: states\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  private static ngxsTokenProviders(\r\n    states: StateClass[],\r\n    options: NgxsModuleOptions\r\n  ): Provider[] {\r\n    return [\r\n      {\r\n        provide: NG_TEST_MODE,\r\n        useValue: isAngularInTestMode\r\n      },\r\n      {\r\n        provide: NG_DEV_MODE,\r\n        useValue: isDevMode\r\n      },\r\n      {\r\n        provide: NGXS_EXECUTION_STRATEGY,\r\n        useClass: options.executionStrategy || DispatchOutsideZoneNgxsExecutionStrategy\r\n      },\r\n      {\r\n        provide: ROOT_STATE_TOKEN,\r\n        useValue: states\r\n      },\r\n      {\r\n        provide: NgxsModule.ROOT_OPTIONS,\r\n        useValue: options\r\n      },\r\n      {\r\n        provide: NgxsConfig,\r\n        useFactory: NgxsModule.ngxsConfigFactory,\r\n        deps: [NgxsModule.ROOT_OPTIONS]\r\n      },\r\n      {\r\n        provide: APP_BOOTSTRAP_LISTENER,\r\n        useFactory: NgxsModule.appBootstrapListenerFactory,\r\n        multi: true,\r\n        deps: [NgxsBootstrapper]\r\n      },\r\n      {\r\n        provide: INITIAL_STATE_TOKEN,\r\n        useFactory: NgxsModule.getInitialState\r\n      },\r\n      {\r\n        provide: NGXS_STATE_CONTEXT_FACTORY,\r\n        useExisting: StateContextFactory\r\n      },\r\n      {\r\n        provide: NGXS_STATE_FACTORY,\r\n        useExisting: StateFactory\r\n      }\r\n    ];\r\n  }\r\n\r\n  private static ngxsConfigFactory(options: NgxsModuleOptions): NgxsConfig {\r\n    return Object.assign(new NgxsConfig(), options);\r\n  }\r\n\r\n  private static appBootstrapListenerFactory(bootstrapper: NgxsBootstrapper): Function {\r\n    return () => bootstrapper.bootstrap();\r\n  }\r\n\r\n  private static getInitialState() {\r\n    return InitialState.pop();\r\n  }\r\n}\r\n","import { ensureStoreMetadata } from '../internal/internals';\r\nimport { ActionType, ActionOptions } from '../actions/symbols';\r\nimport { CONFIG_MESSAGES, VALIDATION_CODE } from '../configs/messages.config';\r\n\r\n/**\r\n * Decorates a method with a action information.\r\n */\r\nexport function Action(\r\n  actions: ActionType | ActionType[],\r\n  options?: ActionOptions\r\n): MethodDecorator {\r\n  return (target: any, name: string | symbol): void => {\r\n    const isStaticMethod = target.hasOwnProperty('prototype');\r\n\r\n    if (isStaticMethod) {\r\n      throw new Error(CONFIG_MESSAGES[VALIDATION_CODE.ACTION_DECORATOR]());\r\n    }\r\n\r\n    const meta = ensureStoreMetadata(target.constructor);\r\n\r\n    if (!Array.isArray(actions)) {\r\n      actions = [actions];\r\n    }\r\n\r\n    for (const action of actions) {\r\n      const type = action.type;\r\n\r\n      if (!meta.actions[type]) {\r\n        meta.actions[type] = [];\r\n      }\r\n\r\n      meta.actions[type].push({\r\n        fn: name,\r\n        options: options || {},\r\n        type\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { ivyEnabledInDevMode } from './ivy-enabled-in-dev-mode';\r\nimport { CONFIG_MESSAGES, VALIDATION_CODE } from '../configs/messages.config';\r\n\r\n/**\r\n * All provided or injected tokens must have `@Injectable` decorator\r\n * (previously, injected tokens without `@Injectable` were allowed\r\n * if another decorator was used, e.g. pipes).\r\n */\r\nexport function ensureStateClassIsInjectable(target: any): void {\r\n  // `Éµprov` is a static property added by the NGCC compiler. It always exists in\r\n  // AOT mode because this property is added before runtime. If an application is running in\r\n  // JIT mode then this property can be added by the `@Injectable()` decorator. The `@Injectable()`\r\n  // decorator has to go after the `@State()` decorator, thus we prevent users from unwanted DI errors.\r\n  ivyEnabledInDevMode().subscribe(_ivyEnabledInDevMode => {\r\n    if (_ivyEnabledInDevMode) {\r\n      const ngInjectableDef = target.Éµprov;\r\n      if (!ngInjectableDef) {\r\n        // Don't warn if Ivy is disabled or `Éµprov` exists on the class\r\n        console.warn(CONFIG_MESSAGES[VALIDATION_CODE.UNDECORATED_STATE_IN_IVY](target.name));\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { StateClass } from '@ngxs/store/internals';\r\n\r\nimport { ensureStoreMetadata, MetaDataModel, StateClassInternal } from '../internal/internals';\r\nimport { META_KEY, META_OPTIONS_KEY, StoreOptions } from '../symbols';\r\nimport { StoreValidators } from '../utils/store-validators';\r\nimport { ensureStateClassIsInjectable } from '../ivy/ensure-state-class-is-injectable';\r\n\r\ninterface MutateMetaOptions<T> {\r\n  meta: MetaDataModel;\r\n  inheritedStateClass: StateClassInternal;\r\n  optionsWithInheritance: StoreOptions<T>;\r\n}\r\n\r\n/**\r\n * Decorates a class with ngxs state information.\r\n */\r\nexport function State<T>(options: StoreOptions<T>) {\r\n  function getStateOptions(inheritedStateClass: StateClassInternal): StoreOptions<T> {\r\n    const inheritanceOptions: Partial<StoreOptions<T>> =\r\n      inheritedStateClass[META_OPTIONS_KEY] || {};\r\n    return { ...inheritanceOptions, ...options } as StoreOptions<T>;\r\n  }\r\n\r\n  function mutateMetaData(params: MutateMetaOptions<T>): void {\r\n    const { meta, inheritedStateClass, optionsWithInheritance } = params;\r\n    const { children, defaults, name } = optionsWithInheritance;\r\n    const stateName: string | null =\r\n      typeof name === 'string' ? name : (name && name.getName()) || null;\r\n    StoreValidators.checkCorrectStateName(stateName);\r\n\r\n    if (inheritedStateClass.hasOwnProperty(META_KEY)) {\r\n      const inheritedMeta: Partial<MetaDataModel> = inheritedStateClass[META_KEY] || {};\r\n      meta.actions = { ...meta.actions, ...inheritedMeta.actions };\r\n    }\r\n\r\n    meta.children = children;\r\n    meta.defaults = defaults;\r\n    meta.name = stateName;\r\n  }\r\n\r\n  return (target: StateClass): void => {\r\n    ensureStateClassIsInjectable(target);\r\n    const stateClass: StateClassInternal = target;\r\n    const meta: MetaDataModel = ensureStoreMetadata(stateClass);\r\n    const inheritedStateClass: StateClassInternal = Object.getPrototypeOf(stateClass);\r\n    const optionsWithInheritance: StoreOptions<T> = getStateOptions(inheritedStateClass);\r\n    mutateMetaData({ meta, inheritedStateClass, optionsWithInheritance });\r\n    stateClass[META_OPTIONS_KEY] = optionsWithInheritance;\r\n  };\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { CONFIG_MESSAGES, VALIDATION_CODE } from '../../configs/messages.config';\r\nimport { propGetter } from '../../internal/internals';\r\nimport { SelectFactory } from './select-factory';\r\nimport { META_KEY } from '../../symbols';\r\nimport { StateToken } from '../../state-token/state-token';\r\nimport { ExtractTokenType } from '../../state-token/symbols';\r\n\r\nconst DOLLAR_CHAR_CODE = 36;\r\n\r\nexport function createSelectObservable<T = any>(selector: any): Observable<T> {\r\n  if (!SelectFactory.store) {\r\n    throw new Error(CONFIG_MESSAGES[VALIDATION_CODE.SELECT_FACTORY_NOT_CONNECTED]());\r\n  }\r\n\r\n  return SelectFactory.store.select(selector);\r\n}\r\n\r\nexport function createSelectorFn(name: string, rawSelector?: any, paths: string[] = []): any {\r\n  rawSelector = !rawSelector ? removeDollarAtTheEnd(name) : rawSelector;\r\n\r\n  if (typeof rawSelector === 'string') {\r\n    const propsArray: string[] = paths.length\r\n      ? [rawSelector, ...paths]\r\n      : rawSelector.split('.');\r\n    return propGetter(propsArray, SelectFactory.config!);\r\n  } else if (rawSelector[META_KEY] && rawSelector[META_KEY].path) {\r\n    return propGetter(rawSelector[META_KEY].path.split('.'), SelectFactory.config!);\r\n  }\r\n\r\n  return rawSelector;\r\n}\r\n\r\n/**\r\n * @example If `foo$` => make it just `foo`\r\n */\r\nexport function removeDollarAtTheEnd(name: string): string {\r\n  const lastCharIndex: number = name.length - 1;\r\n  const dollarAtTheEnd: boolean = name.charCodeAt(lastCharIndex) === DOLLAR_CHAR_CODE;\r\n  return dollarAtTheEnd ? name.slice(0, lastCharIndex) : name;\r\n}\r\n\r\nexport type PropertyType<T> = T extends StateToken<any>\r\n  ? Observable<ExtractTokenType<T>>\r\n  : T extends (...args: any[]) => any\r\n  ? Observable<ReturnType<T>>\r\n  : any;\r\n\r\nexport type ComponentClass<T> = {\r\n  [P in keyof T]: T[P];\r\n};\r\n\r\nexport type SelectType<T> = <\r\n  U extends ComponentClass<any> & Record<K, PropertyType<T>>,\r\n  K extends string\r\n>(\r\n  target: U,\r\n  key: K\r\n) => void;\r\n","import {\r\n  ComponentClass,\r\n  createSelectObservable,\r\n  createSelectorFn,\r\n  PropertyType,\r\n  SelectType\r\n} from './symbols';\r\n\r\n/**\r\n * Decorator for selecting a slice of state from the store.\r\n */\r\nexport function Select<T>(rawSelector?: T, ...paths: string[]): SelectType<T> {\r\n  return function<\r\n    U extends ComponentClass<any> & Record<K, PropertyType<T>>,\r\n    K extends string\r\n  >(target: U, key: K): void {\r\n    const name: string = key.toString();\r\n    const selectorId = `__${name}__selector`;\r\n    const selector = createSelectorFn(name, rawSelector, paths);\r\n\r\n    Object.defineProperties(target, {\r\n      [selectorId]: {\r\n        writable: true,\r\n        enumerable: false,\r\n        configurable: true\r\n      },\r\n      [name]: {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get(): PropertyType<T> {\r\n          return this[selectorId] || (this[selectorId] = createSelectObservable(selector));\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n","import { SharedSelectorOptions } from '../internal/internals';\r\nimport { selectorOptionsMetaAccessor } from '../utils/selector-utils';\r\n\r\n/**\r\n * Decorator for setting selector options at a method or class level.\r\n */\r\nexport function SelectorOptions(options: SharedSelectorOptions) {\r\n  return <ClassDecorator & MethodDecorator>(\r\n    function decorate<T>(\r\n      target: any,\r\n      methodName: string,\r\n      descriptor: TypedPropertyDescriptor<T>\r\n    ) {\r\n      if (methodName) {\r\n        // Method Decorator\r\n        const originalFn = descriptor.value || (<any>descriptor).originalFn;\r\n        if (originalFn) {\r\n          selectorOptionsMetaAccessor.defineOptions(originalFn, options);\r\n        }\r\n      } else {\r\n        // Class Decorator\r\n        selectorOptionsMetaAccessor.defineOptions(target, options);\r\n      }\r\n    }\r\n  );\r\n}\r\n","import { CONFIG_MESSAGES, VALIDATION_CODE } from '../../configs/messages.config';\r\nimport { createSelector } from '../../utils/selector-utils';\r\nimport { SelectorSpec, SelectorType } from './symbols';\r\n\r\n/**\r\n * Decorator for memoizing a state selector.\r\n */\r\nexport function Selector<T>(selectors?: T[]): SelectorType<T> {\r\n  return <U>(\r\n    target: any,\r\n    key: string | symbol,\r\n    descriptor: TypedPropertyDescriptor<SelectorSpec<T, U>>\r\n  ): TypedPropertyDescriptor<SelectorSpec<T, U>> | void => {\r\n    const isNotMethod = !(descriptor && descriptor.value !== null);\r\n\r\n    if (isNotMethod) {\r\n      throw new Error(CONFIG_MESSAGES[VALIDATION_CODE.SELECTOR_DECORATOR]());\r\n    }\r\n\r\n    const originalFn = descriptor.value;\r\n    let memoizedFn: any = null;\r\n    const newDescriptor = {\r\n      configurable: true,\r\n      get() {\r\n        // Selector initialisation deferred to here so that it is at runtime, not decorator parse time\r\n        memoizedFn =\r\n          memoizedFn ||\r\n          createSelector(\r\n            selectors,\r\n            originalFn as any,\r\n            {\r\n              containerClass: target,\r\n              selectorName: key.toString(),\r\n              getSelectorOptions() {\r\n                return {};\r\n              }\r\n            }\r\n          );\r\n        return memoizedFn;\r\n      }\r\n    };\r\n    // Add hidden property to descriptor\r\n    (<any>newDescriptor)['originalFn'] = originalFn;\r\n    return newDescriptor;\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { NgxsExecutionStrategy } from './symbols';\r\n\r\n@Injectable()\r\nexport class NoopNgxsExecutionStrategy implements NgxsExecutionStrategy {\r\n  enter<T>(func: () => T): T {\r\n    return func();\r\n  }\r\n\r\n  leave<T>(func: () => T): T {\r\n    return func();\r\n  }\r\n}\r\n","import { TokenName } from './symbols';\r\nimport { ensureSelectorMetadata, propGetter } from '../internal/internals';\r\nimport { SelectFactory } from '../decorators/select/select-factory';\r\n\r\nexport class StateToken<T = void> {\r\n  constructor(private readonly name: TokenName<T>) {\r\n    const selectorMetadata = ensureSelectorMetadata(<any>this);\r\n    selectorMetadata.selectFromAppState = (state: any): T => {\r\n      // This is lazy initialized with the select from app state function\r\n      // so that it can get the config at the last responsible moment\r\n      const getter = propGetter([this.name], SelectFactory.config!);\r\n      selectorMetadata.selectFromAppState = getter;\r\n      return getter(state);\r\n    };\r\n  }\r\n\r\n  getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  toString(): string {\r\n    return `StateToken[${this.name}]`;\r\n  }\r\n}\r\n"],"names":["isPlatformServer","NgZone","Injectable","Inject","PLATFORM_ID","InjectionToken","filter","map","Observable","tslib_1.__extends","Subject","BehaviorSubject","Optional","SkipSelf","forkJoin","shareReplay","take","exhaustMap","of","throwError","EMPTY","ErrorHandler","MESSAGES","CODE","tslib_1.__values","mergeMap","defaultIfEmpty","catchError","from","takeUntil","Injector","INITIAL_STATE_TOKEN","tap","NgxsBootstrapper","memoize","distinctUntilChanged","ReplaySubject","NgModule","isAngularInTestMode","isDevMode","APP_BOOTSTRAP_LISTENER","NGXS_STATE_CONTEXT_FACTORY","NGXS_STATE_FACTORY","InitialState"],"mappings":"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"}